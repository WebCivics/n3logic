[2025-08-01T07:31:45.975Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T07:31:46.398Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T07:31:46.402Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T07:31:46.436Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T07:31:46.441Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:31:46.441Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:31:46.443Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.444Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T07:31:46.445Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.446Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T07:31:46.447Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.449Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T07:31:46.450Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T07:31:46.451Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:31:46.452Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.453Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:31:46.453Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:31:46.454Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:31:46.455Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:31:46.459Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:31:46.460Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.461Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.462Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:31:46.463Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking triple predicate: b
[2025-08-01T07:31:46.463Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:31:46.464Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Predicate type: IRI Predicate value: b
[2025-08-01T07:31:46.465Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Checking triple for builtin match: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}} Predicate URI: b
[2025-08-01T07:31:46.466Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Registered builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.467Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] No builtin found for predicate: b
[2025-08-01T07:31:46.467Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:31:46.468Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:31:46.469Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:31:46.470Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.471Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.475Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.476Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.477Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:31:46.478Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.478Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.479Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:31:46.480Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:31:46.481Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:31:46.482Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:31:46.482Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:31:46.483Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:31:46.484Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.485Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:31:46.486Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:31:46.487Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:31:46.488Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:31:46.489Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:31:46.490Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:31:46.490Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.491Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:31:46.492Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:31:46.493Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.493Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.494Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.495Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:31:46.495Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T07:31:46.496Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T07:31:46.497Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:31:46.497Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T07:31:46.498Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T07:31:46.498Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:31:46.499Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:31:46.500Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:31:46.500Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:31:46.501Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.502Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.503Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:31:46.503Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking triple predicate: b
[2025-08-01T07:31:46.504Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:31:46.505Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Predicate type: IRI Predicate value: b
[2025-08-01T07:31:46.505Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Checking triple for builtin match: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}} Predicate URI: b
[2025-08-01T07:31:46.506Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Registered builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.507Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] No builtin found for predicate: b
[2025-08-01T07:31:46.508Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:31:46.508Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:31:46.509Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:31:46.510Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.514Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.515Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.516Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.516Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:31:46.517Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.518Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.519Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:31:46.519Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:31:46.520Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T07:31:46.521Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T07:31:46.521Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:31:46.522Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:31:46.523Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:31:46.523Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:31:46.524Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:31:46.525Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:31:46.525Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.526Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:31:46.527Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:31:46.528Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:31:46.528Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:31:46.529Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:31:46.530Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:31:46.531Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.531Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:31:46.532Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:31:46.533Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.533Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.534Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.535Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:31:46.535Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T07:31:46.536Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T07:31:46.537Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:31:46.538Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T07:31:46.538Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T07:31:46.543Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T07:31:46.544Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T07:31:46.544Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T07:31:46.545Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:31:46.546Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T07:31:46.559Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T07:31:46.560Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T07:31:46.573Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T07:31:46.574Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:31:46.575Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T07:31:46.575Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:31:46.576Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T07:31:46.577Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:31:46.578Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T07:31:46.579Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}],"rules":[]}
[2025-08-01T07:31:46.580Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}]
[2025-08-01T07:31:46.580Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}}
[2025-08-01T07:31:46.581Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}
[2025-08-01T07:31:46.582Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:31:46.582Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T07:31:46.583Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T07:31:46.583Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T07:31:46.584Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T07:31:46.585Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T07:31:46.585Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T07:31:46.598Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T07:31:46.598Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T07:31:46.622Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T07:31:46.622Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:31:46.623Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:31:46.624Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.625Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T07:31:46.625Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.626Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T07:31:46.627Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.627Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T07:31:46.628Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T07:31:46.629Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:31:46.630Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.630Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:31:46.631Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:31:46.632Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:31:46.632Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:31:46.633Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:31:46.634Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.634Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.635Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:31:46.636Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking triple predicate: b
[2025-08-01T07:31:46.637Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:31:46.637Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Predicate type: IRI Predicate value: b
[2025-08-01T07:31:46.638Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Checking triple for builtin match: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}} Predicate URI: b
[2025-08-01T07:31:46.639Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Registered builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.639Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] No builtin found for predicate: b
[2025-08-01T07:31:46.640Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:31:46.641Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:31:46.642Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:31:46.642Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.643Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.644Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.645Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.646Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:31:46.646Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.647Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.648Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:31:46.648Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:31:46.649Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:31:46.650Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:31:46.650Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:31:46.651Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:31:46.652Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.652Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:31:46.653Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:31:46.654Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:31:46.655Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:31:46.655Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:31:46.656Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:31:46.657Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.657Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:31:46.658Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:31:46.659Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.660Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.660Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.661Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:31:46.662Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T07:31:46.662Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T07:31:46.663Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:31:46.663Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T07:31:46.664Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T07:31:46.665Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:31:46.665Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:31:46.666Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:31:46.667Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:31:46.667Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.668Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.669Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:31:46.669Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking triple predicate: b
[2025-08-01T07:31:46.672Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:31:46.672Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Predicate type: IRI Predicate value: b
[2025-08-01T07:31:46.673Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Checking triple for builtin match: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}} Predicate URI: b
[2025-08-01T07:31:46.674Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Registered builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.675Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] No builtin found for predicate: b
[2025-08-01T07:31:46.675Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:31:46.676Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:31:46.677Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:31:46.678Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.678Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.679Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.680Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:31:46.681Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:31:46.681Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.682Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.683Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:31:46.683Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:31:46.684Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T07:31:46.685Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T07:31:46.686Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:31:46.686Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:31:46.687Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:31:46.688Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:31:46.688Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:31:46.689Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:31:46.690Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.690Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:31:46.691Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:31:46.692Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:31:46.693Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:31:46.693Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:31:46.694Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:31:46.694Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.695Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:31:46.696Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:31:46.696Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.697Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.698Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:31:46.698Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:31:46.699Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T07:31:46.699Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T07:31:46.700Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:31:46.701Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T07:31:46.701Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T07:35:54.213Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T07:35:54.435Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T07:35:54.438Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T07:35:54.472Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T07:35:54.473Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:35:54.474Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:35:54.475Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.476Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T07:35:54.478Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.478Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T07:35:54.480Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.482Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T07:35:54.483Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T07:35:54.487Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:35:54.488Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.489Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:35:54.490Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:35:54.491Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:35:54.491Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:35:54.495Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:35:54.497Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.498Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.499Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:35:54.500Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking triple predicate: b
[2025-08-01T07:35:54.501Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:35:54.501Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Predicate type: IRI Predicate value: b
[2025-08-01T07:35:54.502Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Checking triple for builtin match: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}} Predicate URI: b
[2025-08-01T07:35:54.503Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Registered builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.504Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] No builtin found for predicate: b
[2025-08-01T07:35:54.505Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:35:54.506Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:35:54.507Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:35:54.508Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.509Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.510Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.511Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.511Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:35:54.512Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.513Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.514Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:35:54.515Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:35:54.515Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:35:54.516Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:35:54.517Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:35:54.518Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:35:54.518Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.520Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:35:54.521Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:35:54.522Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:35:54.523Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:35:54.524Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:35:54.524Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:35:54.525Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.526Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:35:54.527Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:35:54.528Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.528Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.529Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.530Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:35:54.534Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T07:35:54.535Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T07:35:54.536Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:35:54.537Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T07:35:54.537Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T07:35:54.538Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:35:54.539Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:35:54.539Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:35:54.540Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:35:54.541Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.542Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.542Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:35:54.543Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking triple predicate: b
[2025-08-01T07:35:54.544Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:35:54.544Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Predicate type: IRI Predicate value: b
[2025-08-01T07:35:54.545Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Checking triple for builtin match: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}} Predicate URI: b
[2025-08-01T07:35:54.546Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Registered builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.547Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] No builtin found for predicate: b
[2025-08-01T07:35:54.547Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:35:54.548Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:35:54.549Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:35:54.550Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.550Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.551Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.552Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.553Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:35:54.554Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.554Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.555Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:35:54.556Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:35:54.557Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T07:35:54.557Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T07:35:54.558Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:35:54.559Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:35:54.560Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:35:54.560Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:35:54.561Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:35:54.562Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:35:54.562Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.563Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:35:54.564Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:35:54.565Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:35:54.566Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:35:54.566Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:35:54.567Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:35:54.568Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.568Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:35:54.569Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:35:54.570Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.570Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.571Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.572Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:35:54.572Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T07:35:54.573Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T07:35:54.574Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:35:54.574Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T07:35:54.575Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T07:35:54.583Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T07:35:54.584Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T07:35:54.584Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T07:35:54.585Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:35:54.586Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T07:35:54.599Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T07:35:54.600Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T07:35:54.613Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T07:35:54.614Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:35:54.614Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T07:35:54.615Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:35:54.616Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T07:35:54.617Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:35:54.618Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T07:35:54.619Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}],"rules":[]}
[2025-08-01T07:35:54.619Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}]
[2025-08-01T07:35:54.620Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}}
[2025-08-01T07:35:54.621Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}
[2025-08-01T07:35:54.622Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:35:54.622Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T07:35:54.623Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T07:35:54.624Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T07:35:54.624Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T07:35:54.625Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T07:35:54.626Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T07:35:54.639Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T07:35:54.640Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T07:35:54.673Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T07:35:54.674Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:35:54.675Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:35:54.676Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.677Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T07:35:54.678Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.679Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T07:35:54.680Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.681Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T07:35:54.682Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T07:35:54.683Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:35:54.684Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.685Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:35:54.686Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:35:54.687Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:35:54.688Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:35:54.689Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:35:54.690Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.691Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.692Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:35:54.693Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking triple predicate: b
[2025-08-01T07:35:54.694Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:35:54.695Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Predicate type: IRI Predicate value: b
[2025-08-01T07:35:54.696Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Checking triple for builtin match: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}} Predicate URI: b
[2025-08-01T07:35:54.697Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Registered builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.698Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] No builtin found for predicate: b
[2025-08-01T07:35:54.699Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:35:54.700Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:35:54.701Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:35:54.702Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.703Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.705Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.706Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.707Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:35:54.708Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.710Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.713Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:35:54.714Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:35:54.715Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:35:54.716Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:35:54.717Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:35:54.718Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:35:54.719Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.720Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:35:54.721Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:35:54.723Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:35:54.724Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:35:54.725Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:35:54.726Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:35:54.728Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.729Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:35:54.730Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:35:54.731Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.732Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.733Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.734Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:35:54.735Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T07:35:54.736Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T07:35:54.737Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:35:54.738Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T07:35:54.738Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T07:35:54.739Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:35:54.740Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:35:54.740Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:35:54.741Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:35:54.742Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.744Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.745Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:35:54.745Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking triple predicate: b
[2025-08-01T07:35:54.746Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:35:54.747Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Predicate type: IRI Predicate value: b
[2025-08-01T07:35:54.748Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Checking triple for builtin match: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}} Predicate URI: b
[2025-08-01T07:35:54.748Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Registered builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.749Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] No builtin found for predicate: b
[2025-08-01T07:35:54.750Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:35:54.750Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:35:54.751Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:35:54.752Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.753Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.754Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.755Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:35:54.756Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:35:54.756Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.757Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.758Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:35:54.759Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:35:54.760Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T07:35:54.761Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T07:35:54.762Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:35:54.763Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:35:54.764Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:35:54.764Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:35:54.765Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:35:54.766Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:35:54.766Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.767Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:35:54.768Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:35:54.769Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:35:54.770Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:35:54.770Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:35:54.771Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:35:54.771Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.772Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:35:54.773Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:35:54.774Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.774Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.775Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:35:54.776Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:35:54.777Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T07:35:54.778Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T07:35:54.779Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:35:54.779Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T07:35:54.781Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T07:39:02.215Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T07:39:03.936Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T07:39:03.941Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T07:39:03.975Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T07:39:03.976Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:39:03.976Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:39:03.978Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:03.979Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T07:39:03.980Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:03.981Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T07:39:03.982Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:03.985Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T07:39:03.986Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T07:39:03.986Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:39:03.987Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:03.988Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:39:03.989Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:39:03.990Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:39:03.991Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:39:03.995Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:39:03.997Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:03.998Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:03.999Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:39:04.000Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking triple predicate: b
[2025-08-01T07:39:04.003Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:39:04.005Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Predicate type: IRI Predicate value: b
[2025-08-01T07:39:04.005Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Checking triple for builtin match: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}} Predicate URI: b
[2025-08-01T07:39:04.007Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Registered builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:04.008Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] No builtin found for predicate: b
[2025-08-01T07:39:04.009Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:39:04.009Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:39:04.010Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:39:04.011Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.012Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.013Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:04.014Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:04.015Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:39:04.016Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.016Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.017Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:39:04.018Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:39:04.020Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:39:04.021Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:39:04.022Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:39:04.023Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:39:04.024Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.027Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:39:04.028Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:39:04.030Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:39:04.031Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:39:04.032Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:39:04.033Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:39:04.034Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.035Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:39:04.036Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:39:04.036Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.037Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.038Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.039Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:39:04.040Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T07:39:04.041Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T07:39:04.041Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:39:04.042Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T07:39:04.043Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T07:39:04.043Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:39:04.044Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:39:04.045Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:39:04.045Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:39:04.046Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:04.051Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:04.052Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:39:04.053Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking triple predicate: b
[2025-08-01T07:39:04.053Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:39:04.054Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Predicate type: IRI Predicate value: b
[2025-08-01T07:39:04.055Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Checking triple for builtin match: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}} Predicate URI: b
[2025-08-01T07:39:04.056Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Registered builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:04.057Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] No builtin found for predicate: b
[2025-08-01T07:39:04.058Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:39:04.059Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:39:04.059Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:39:04.060Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.061Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.062Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:04.062Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:04.063Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:39:04.064Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.065Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.065Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:39:04.066Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:39:04.067Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T07:39:04.068Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T07:39:04.068Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:39:04.069Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:39:04.070Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:39:04.070Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:39:04.071Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:39:04.072Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:39:04.073Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.074Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:39:04.074Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:39:04.076Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:39:04.077Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:39:04.077Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:39:04.078Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:39:04.079Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.079Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:39:04.080Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:39:04.081Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.081Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.082Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.083Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:39:04.084Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T07:39:04.084Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T07:39:04.085Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:39:04.086Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T07:39:04.086Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T07:39:04.092Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T07:39:04.092Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T07:39:04.093Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T07:39:04.094Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:39:04.095Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T07:39:04.110Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T07:39:04.111Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T07:39:04.124Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T07:39:04.125Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:39:04.125Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T07:39:04.126Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:39:04.127Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T07:39:04.128Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:39:04.129Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T07:39:04.130Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}],"rules":[]}
[2025-08-01T07:39:04.131Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}]
[2025-08-01T07:39:04.131Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}}
[2025-08-01T07:39:04.132Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}
[2025-08-01T07:39:04.133Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:39:04.133Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T07:39:04.134Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T07:39:04.135Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T07:39:04.136Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T07:39:04.136Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T07:39:04.137Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T07:39:04.151Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T07:39:04.152Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T07:39:04.178Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T07:39:04.179Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:39:04.180Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:39:04.180Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:04.181Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T07:39:04.182Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:04.183Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T07:39:04.184Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:04.185Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T07:39:04.185Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T07:39:04.186Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:39:04.187Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.188Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:39:04.188Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:39:04.189Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:39:04.190Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:39:04.190Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:39:04.191Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:04.192Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:04.193Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:39:04.194Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking triple predicate: b
[2025-08-01T07:39:04.194Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:39:04.195Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Predicate type: IRI Predicate value: b
[2025-08-01T07:39:04.196Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Checking triple for builtin match: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}} Predicate URI: b
[2025-08-01T07:39:04.196Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Registered builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:04.197Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] No builtin found for predicate: b
[2025-08-01T07:39:04.198Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:39:04.199Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:39:04.199Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:39:04.200Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.201Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.202Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:04.203Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:04.203Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:39:04.204Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.205Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.206Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:39:04.206Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:39:04.207Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:39:04.208Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:39:04.208Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:39:04.209Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:39:04.210Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.210Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:39:04.211Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:39:04.212Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:39:04.213Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:39:04.214Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:39:04.214Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:39:04.215Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.216Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:39:04.218Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:39:04.219Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.219Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.220Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.221Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:39:04.222Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T07:39:04.222Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T07:39:04.223Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:39:04.224Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T07:39:04.224Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T07:39:04.225Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:39:04.225Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:39:04.226Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:39:04.227Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:39:04.228Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:04.228Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:04.229Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:39:04.230Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking triple predicate: b
[2025-08-01T07:39:04.230Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:39:04.231Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Predicate type: IRI Predicate value: b
[2025-08-01T07:39:04.232Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Checking triple for builtin match: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}} Predicate URI: b
[2025-08-01T07:39:04.233Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Registered builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:04.233Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] No builtin found for predicate: b
[2025-08-01T07:39:04.234Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:39:04.235Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:39:04.235Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:39:04.236Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.237Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.238Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:04.238Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:39:04.239Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:39:04.240Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.241Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.241Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:39:04.242Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:39:04.243Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T07:39:04.244Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T07:39:04.244Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:39:04.245Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:39:04.246Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:39:04.246Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:39:04.247Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:39:04.248Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:39:04.248Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.249Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:39:04.250Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:39:04.251Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:39:04.252Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:39:04.252Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:39:04.253Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:39:04.253Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.254Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:39:04.255Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:39:04.255Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.256Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.257Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:39:04.257Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:39:04.258Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T07:39:04.259Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T07:39:04.259Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:39:04.260Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T07:39:04.261Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T07:41:22.748Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T07:41:23.829Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T07:41:23.832Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T07:41:23.866Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T07:41:23.867Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:41:23.867Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:41:23.868Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:41:23.870Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:23.870Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T07:41:23.871Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T07:41:23.873Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:23.874Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T07:41:23.876Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:23.878Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T07:41:23.879Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T07:41:23.879Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:41:23.880Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:23.881Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:41:23.882Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:41:23.882Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:41:23.883Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:41:23.887Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:41:23.889Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:23.893Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:23.894Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:23.895Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:41:23.896Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:41:23.896Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking triple predicate: b
[2025-08-01T07:41:23.897Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:41:23.898Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T07:41:23.899Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Predicate type: IRI Predicate value: b
[2025-08-01T07:41:23.899Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Checking triple for builtin match: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}} Predicate URI: b
[2025-08-01T07:41:23.901Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Registered builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:23.902Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] No builtin found for predicate: b
[2025-08-01T07:41:23.902Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:41:23.903Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:41:23.904Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:41:23.905Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:23.906Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:23.907Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:23.908Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:23.909Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:23.910Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:41:23.911Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:23.911Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:23.912Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:41:23.913Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:41:23.914Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:41:23.914Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:41:23.915Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:41:23.916Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:41:23.916Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:23.918Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:41:23.919Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:41:23.920Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:41:23.921Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:41:23.922Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:41:23.922Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:41:23.923Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:23.924Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:41:23.925Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:41:23.926Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:23.927Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:23.927Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:23.928Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:41:23.933Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T07:41:23.934Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T07:41:23.935Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:41:23.935Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T07:41:23.936Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T07:41:23.936Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:41:23.937Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:41:23.938Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:41:23.939Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:41:23.939Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:23.940Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:23.941Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:23.942Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:41:23.943Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:41:23.944Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking triple predicate: b
[2025-08-01T07:41:23.944Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:41:23.945Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T07:41:23.945Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Predicate type: IRI Predicate value: b
[2025-08-01T07:41:23.946Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Checking triple for builtin match: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}} Predicate URI: b
[2025-08-01T07:41:23.947Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Registered builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:23.948Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] No builtin found for predicate: b
[2025-08-01T07:41:23.948Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:41:23.949Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:41:23.950Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:41:23.950Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:23.951Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:23.952Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:23.953Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:23.954Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:23.954Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:41:23.955Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:23.956Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:23.957Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:41:23.958Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:41:23.959Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T07:41:23.960Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T07:41:23.960Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:41:23.961Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:41:23.962Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:41:23.962Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:41:23.963Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:41:23.964Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:41:23.964Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:23.965Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:41:23.966Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:41:23.967Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:41:23.967Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:41:23.968Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:41:23.969Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:41:23.969Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:23.970Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:41:23.971Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:41:23.972Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:23.972Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:23.973Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:23.974Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:41:23.975Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T07:41:23.976Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T07:41:23.976Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:41:23.977Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T07:41:23.978Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T07:41:23.985Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T07:41:23.985Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T07:41:23.986Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T07:41:23.987Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:41:23.988Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T07:41:24.001Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T07:41:24.002Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T07:41:24.014Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T07:41:24.014Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T07:41:24.015Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:41:24.016Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  },
  {
    "uri": "http://example.org/custom#isFoo",
    "arity": 1,
    "description": "Returns true if the subject is the literal \"foo\""
  }
]
[2025-08-01T07:41:24.017Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T07:41:24.017Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:41:24.018Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T07:41:24.019Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:41:24.020Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T07:41:24.021Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}],"rules":[]}
[2025-08-01T07:41:24.021Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}]
[2025-08-01T07:41:24.022Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}}
[2025-08-01T07:41:24.023Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}
[2025-08-01T07:41:24.024Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:41:24.024Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T07:41:24.025Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T07:41:24.025Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T07:41:24.026Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T07:41:24.027Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T07:41:24.028Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T07:41:24.042Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T07:41:24.043Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T07:41:24.067Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T07:41:24.068Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:41:24.069Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:41:24.069Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:41:24.070Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:24.071Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T07:41:24.072Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T07:41:24.073Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:24.073Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T07:41:24.074Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:24.075Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T07:41:24.076Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T07:41:24.077Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:41:24.078Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:24.078Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:41:24.079Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:41:24.079Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:41:24.080Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:41:24.081Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:41:24.082Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:24.083Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:24.084Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:24.084Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:41:24.085Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:41:24.086Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking triple predicate: b
[2025-08-01T07:41:24.086Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:41:24.087Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T07:41:24.088Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Predicate type: IRI Predicate value: b
[2025-08-01T07:41:24.089Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Checking triple for builtin match: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}} Predicate URI: b
[2025-08-01T07:41:24.090Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Registered builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:24.091Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] No builtin found for predicate: b
[2025-08-01T07:41:24.091Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:41:24.092Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:41:24.093Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:41:24.094Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:24.096Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:24.097Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:24.097Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:24.098Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:24.099Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:41:24.100Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:24.100Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:24.101Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:41:24.102Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:41:24.111Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:41:24.112Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:41:24.113Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:41:24.113Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:41:24.114Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:24.115Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:41:24.116Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:41:24.117Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:41:24.118Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:41:24.118Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:41:24.119Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:41:24.120Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:24.120Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:41:24.121Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:41:24.122Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:24.123Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:24.123Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:24.124Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:41:24.125Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T07:41:24.126Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T07:41:24.126Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:41:24.127Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T07:41:24.128Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T07:41:24.128Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:41:24.129Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:41:24.130Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:41:24.131Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:41:24.132Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:24.133Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:24.134Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:24.134Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:41:24.135Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:41:24.136Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking triple predicate: b
[2025-08-01T07:41:24.137Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:41:24.137Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T07:41:24.138Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Predicate type: IRI Predicate value: b
[2025-08-01T07:41:24.139Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Checking triple for builtin match: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}} Predicate URI: b
[2025-08-01T07:41:24.140Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Registered builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:24.140Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] No builtin found for predicate: b
[2025-08-01T07:41:24.142Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:41:24.142Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:41:24.143Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:41:24.144Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:24.145Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:24.145Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:24.146Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:24.147Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:41:24.148Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:41:24.148Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:24.149Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:24.150Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:41:24.151Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:41:24.151Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T07:41:24.152Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T07:41:24.153Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:41:24.153Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:41:24.154Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:41:24.155Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:41:24.156Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:41:24.156Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:41:24.157Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:24.158Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:41:24.159Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:41:24.160Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:41:24.160Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:41:24.162Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:41:24.163Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:41:24.164Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:24.164Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:41:24.165Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:41:24.166Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:24.166Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:24.167Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:41:24.168Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:41:24.168Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T07:41:24.169Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T07:41:24.170Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:41:24.170Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T07:41:24.171Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T07:43:23.019Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T07:43:24.101Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T07:43:24.105Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T07:43:24.138Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T07:43:24.139Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:43:24.139Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:43:24.140Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:43:24.141Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.142Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T07:43:24.143Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T07:43:24.145Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.146Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T07:43:24.147Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.149Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T07:43:24.150Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T07:43:24.150Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:43:24.151Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.152Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:43:24.153Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:43:24.153Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:43:24.154Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:43:24.158Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:43:24.159Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.160Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.161Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.162Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:43:24.163Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:43:24.163Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking triple predicate: b
[2025-08-01T07:43:24.164Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Checking triple for builtin match: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}} Predicate URI: b
[2025-08-01T07:43:24.165Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Registered builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.166Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] No builtin found for predicate: b
[2025-08-01T07:43:24.167Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:43:24.167Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T07:43:24.168Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:43:24.169Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:43:24.170Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:43:24.171Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.171Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.172Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.173Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.174Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.181Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:43:24.182Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.183Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.184Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:43:24.186Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:43:24.187Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:43:24.188Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:43:24.189Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:43:24.190Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:43:24.190Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.192Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:43:24.193Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:43:24.194Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:43:24.195Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:43:24.195Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:43:24.196Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:43:24.197Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.198Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:43:24.198Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:43:24.199Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.200Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.200Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.201Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:43:24.202Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T07:43:24.202Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T07:43:24.203Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:43:24.204Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T07:43:24.204Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T07:43:24.205Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:43:24.206Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:43:24.206Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:43:24.207Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:43:24.208Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.208Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.209Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.210Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:43:24.211Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:43:24.212Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking triple predicate: b
[2025-08-01T07:43:24.212Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Checking triple for builtin match: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}} Predicate URI: b
[2025-08-01T07:43:24.213Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Registered builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.214Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] No builtin found for predicate: b
[2025-08-01T07:43:24.214Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:43:24.215Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T07:43:24.216Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:43:24.217Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:43:24.217Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:43:24.218Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.219Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.219Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.220Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.221Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.225Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:43:24.225Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.226Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.227Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:43:24.228Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:43:24.228Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T07:43:24.229Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T07:43:24.230Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:43:24.230Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:43:24.231Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:43:24.232Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:43:24.232Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:43:24.233Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:43:24.234Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.234Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:43:24.235Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:43:24.236Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:43:24.237Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:43:24.237Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:43:24.238Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:43:24.239Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.239Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:43:24.240Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:43:24.241Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.241Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.242Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.242Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:43:24.243Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T07:43:24.244Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T07:43:24.244Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:43:24.245Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T07:43:24.246Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T07:43:24.250Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T07:43:24.251Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T07:43:24.252Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T07:43:24.252Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:43:24.253Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T07:43:24.266Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T07:43:24.267Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T07:43:24.280Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T07:43:24.281Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T07:43:24.282Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:43:24.283Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  },
  {
    "uri": "http://example.org/custom#isFoo",
    "arity": 1,
    "description": "Returns true if the subject is the literal \"foo\""
  }
]
[2025-08-01T07:43:24.283Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T07:43:24.284Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:43:24.285Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T07:43:24.285Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:43:24.286Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T07:43:24.287Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}],"rules":[]}
[2025-08-01T07:43:24.288Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}]
[2025-08-01T07:43:24.288Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}}
[2025-08-01T07:43:24.289Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}
[2025-08-01T07:43:24.290Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:43:24.290Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T07:43:24.291Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T07:43:24.291Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T07:43:24.292Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T07:43:24.293Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T07:43:24.293Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T07:43:24.306Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T07:43:24.307Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T07:43:24.330Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T07:43:24.330Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:43:24.331Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:43:24.332Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:43:24.332Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.333Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T07:43:24.334Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T07:43:24.334Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.335Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T07:43:24.336Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.337Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T07:43:24.337Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T07:43:24.338Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:43:24.339Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.339Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:43:24.340Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:43:24.341Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:43:24.341Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:43:24.342Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:43:24.343Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.343Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.344Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.345Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:43:24.346Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:43:24.346Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking triple predicate: b
[2025-08-01T07:43:24.347Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Checking triple for builtin match: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}} Predicate URI: b
[2025-08-01T07:43:24.348Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Registered builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.348Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] No builtin found for predicate: b
[2025-08-01T07:43:24.349Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:43:24.350Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T07:43:24.350Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:43:24.351Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:43:24.352Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:43:24.353Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.353Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.354Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.355Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.356Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.356Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:43:24.357Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.358Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.358Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:43:24.359Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:43:24.360Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:43:24.361Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:43:24.361Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:43:24.362Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:43:24.362Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.363Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:43:24.364Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:43:24.365Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:43:24.365Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:43:24.366Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:43:24.367Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:43:24.367Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.368Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:43:24.369Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:43:24.370Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.370Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.371Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.372Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:43:24.373Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T07:43:24.373Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T07:43:24.374Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:43:24.374Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T07:43:24.375Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T07:43:24.376Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:43:24.376Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:43:24.377Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:43:24.378Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:43:24.379Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.379Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.380Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.382Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:43:24.383Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:43:24.384Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking triple predicate: b
[2025-08-01T07:43:24.384Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Checking triple for builtin match: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}} Predicate URI: b
[2025-08-01T07:43:24.385Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] Registered builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.386Z] [N3LogicReasoner][DEBUG] [BUILTIN MATCH][TRACE] No builtin found for predicate: b
[2025-08-01T07:43:24.387Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:43:24.387Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T07:43:24.388Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:43:24.389Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:43:24.390Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:43:24.390Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.391Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.392Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.392Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.393Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:43:24.394Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:43:24.395Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.396Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.396Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:43:24.397Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:43:24.398Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T07:43:24.398Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T07:43:24.399Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:43:24.400Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:43:24.400Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:43:24.401Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:43:24.402Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:43:24.402Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:43:24.403Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.403Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:43:24.404Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:43:24.405Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:43:24.406Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:43:24.407Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:43:24.407Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:43:24.408Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.408Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:43:24.409Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:43:24.410Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.410Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.411Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:43:24.412Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:43:24.412Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T07:43:24.413Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T07:43:24.413Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:43:24.414Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T07:43:24.415Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T07:45:11.710Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T07:45:12.604Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T07:45:12.607Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T07:45:12.639Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T07:45:12.640Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:12.641Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:45:12.641Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:45:12.643Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.643Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T07:45:12.644Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T07:45:12.646Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.647Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T07:45:12.648Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.650Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T07:45:12.651Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T07:45:12.652Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:45:12.653Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.653Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:45:12.654Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:12.655Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:45:12.656Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:45:12.663Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:45:12.664Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.665Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:45:12.666Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:12.667Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.668Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.669Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.670Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:45:12.671Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:45:12.672Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T07:45:12.673Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.673Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T07:45:12.674Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T07:45:12.675Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T07:45:12.676Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T07:45:12.676Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T07:45:12.677Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T07:45:12.678Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T07:45:12.679Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T07:45:12.679Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T07:45:12.680Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T07:45:12.681Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T07:45:12.682Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T07:45:12.682Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T07:45:12.683Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T07:45:12.684Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T07:45:12.685Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T07:45:12.685Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T07:45:12.686Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T07:45:12.687Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T07:45:12.687Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T07:45:12.688Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T07:45:12.689Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T07:45:12.690Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T07:45:12.690Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T07:45:12.691Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T07:45:12.692Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T07:45:12.692Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T07:45:12.693Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T07:45:12.694Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T07:45:12.694Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T07:45:12.699Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T07:45:12.700Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:45:12.701Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T07:45:12.701Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:45:12.702Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:45:12.703Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:45:12.704Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.705Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.705Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.706Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T07:45:12.707Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:12.708Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.708Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.709Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.710Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:45:12.711Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.712Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.712Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:45:12.713Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:45:12.714Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:12.714Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:12.715Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:45:12.716Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:45:12.716Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.718Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:45:12.719Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:45:12.720Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:45:12.721Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:45:12.721Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:45:12.722Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:45:12.723Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.723Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:45:12.724Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:45:12.725Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.725Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.726Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.727Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:45:12.727Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T07:45:12.728Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T07:45:12.729Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:12.729Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T07:45:12.730Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T07:45:12.731Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:12.731Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:45:12.732Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:45:12.733Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:45:12.733Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.734Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:45:12.735Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:12.736Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.736Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.737Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.738Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:45:12.739Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:45:12.739Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T07:45:12.740Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.741Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T07:45:12.741Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T07:45:12.742Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T07:45:12.745Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T07:45:12.746Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T07:45:12.746Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T07:45:12.747Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T07:45:12.748Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T07:45:12.748Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T07:45:12.749Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T07:45:12.750Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T07:45:12.750Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T07:45:12.751Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T07:45:12.752Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T07:45:12.752Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T07:45:12.753Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T07:45:12.754Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T07:45:12.754Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T07:45:12.755Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T07:45:12.756Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T07:45:12.756Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T07:45:12.757Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T07:45:12.758Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T07:45:12.758Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T07:45:12.759Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T07:45:12.760Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T07:45:12.760Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T07:45:12.761Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T07:45:12.761Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T07:45:12.762Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T07:45:12.763Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T07:45:12.764Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:45:12.765Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T07:45:12.765Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:45:12.766Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:45:12.767Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:45:12.767Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.768Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.769Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.770Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T07:45:12.771Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:12.772Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.773Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.774Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.775Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:45:12.775Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.776Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.777Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:45:12.778Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:45:12.778Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T07:45:12.779Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T07:45:12.780Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:45:12.780Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:45:12.781Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:12.782Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:12.783Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:45:12.783Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:45:12.784Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.785Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:45:12.785Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:45:12.786Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:45:12.787Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:45:12.788Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:45:12.788Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:45:12.789Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.789Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:45:12.790Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:45:12.791Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.791Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.792Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.792Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:45:12.793Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T07:45:12.794Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T07:45:12.794Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:12.795Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T07:45:12.796Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T07:45:12.802Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T07:45:12.802Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T07:45:12.803Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T07:45:12.804Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:45:12.804Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T07:45:12.817Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T07:45:12.818Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T07:45:12.830Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T07:45:12.831Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T07:45:12.831Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:45:12.832Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  },
  {
    "uri": "http://example.org/custom#isFoo",
    "arity": 1,
    "description": "Returns true if the subject is the literal \"foo\""
  }
]
[2025-08-01T07:45:12.833Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T07:45:12.834Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:45:12.834Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T07:45:12.835Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:45:12.836Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T07:45:12.837Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}],"rules":[]}
[2025-08-01T07:45:12.838Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}]
[2025-08-01T07:45:12.838Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}}
[2025-08-01T07:45:12.839Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}
[2025-08-01T07:45:12.840Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:45:12.841Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T07:45:12.841Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T07:45:12.842Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T07:45:12.843Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T07:45:12.843Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T07:45:12.844Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T07:45:12.857Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T07:45:12.858Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T07:45:12.882Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T07:45:12.883Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:12.884Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:45:12.884Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:45:12.885Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.886Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T07:45:12.886Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T07:45:12.887Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.888Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T07:45:12.888Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.889Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T07:45:12.890Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T07:45:12.891Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:45:12.892Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.892Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:45:12.893Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:12.894Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:45:12.894Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:45:12.895Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:45:12.896Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.896Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:45:12.897Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:12.898Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.898Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.899Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.900Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:45:12.900Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:45:12.901Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T07:45:12.902Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.903Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T07:45:12.903Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T07:45:12.904Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T07:45:12.905Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T07:45:12.905Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T07:45:12.907Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T07:45:12.908Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T07:45:12.908Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T07:45:12.909Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T07:45:12.910Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T07:45:12.910Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T07:45:12.911Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T07:45:12.911Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T07:45:12.912Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T07:45:12.913Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T07:45:12.913Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T07:45:12.914Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T07:45:12.915Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T07:45:12.915Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T07:45:12.916Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T07:45:12.917Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T07:45:12.917Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T07:45:12.918Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T07:45:12.919Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T07:45:12.919Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T07:45:12.920Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T07:45:12.920Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T07:45:12.921Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T07:45:12.922Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T07:45:12.922Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T07:45:12.923Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T07:45:12.923Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:45:12.924Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T07:45:12.925Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:45:12.925Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:45:12.926Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:45:12.927Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.927Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.928Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.929Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T07:45:12.929Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:12.930Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.931Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.932Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.933Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:45:12.933Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.934Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.935Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:45:12.935Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:45:12.936Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:12.937Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:12.937Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:45:12.938Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:45:12.939Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.939Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:45:12.940Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:45:12.941Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:45:12.942Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:45:12.942Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:45:12.943Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:45:12.944Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.944Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:45:12.945Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:45:12.946Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.946Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.947Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.948Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:45:12.948Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T07:45:12.949Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T07:45:12.950Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:12.950Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T07:45:12.951Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T07:45:12.951Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:12.952Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:45:12.953Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:45:12.953Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:45:12.954Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.955Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:45:12.955Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:12.956Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.958Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.959Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.960Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:45:12.960Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:45:12.961Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T07:45:12.962Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.962Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T07:45:12.963Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T07:45:12.964Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T07:45:12.964Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T07:45:12.965Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T07:45:12.966Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T07:45:12.966Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T07:45:12.967Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T07:45:12.968Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T07:45:12.968Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T07:45:12.969Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T07:45:12.970Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T07:45:12.970Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T07:45:12.971Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T07:45:12.972Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T07:45:12.972Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T07:45:12.973Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T07:45:12.974Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T07:45:12.974Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T07:45:12.975Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T07:45:12.975Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T07:45:12.976Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T07:45:12.977Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T07:45:12.977Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T07:45:12.978Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T07:45:12.978Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T07:45:12.979Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T07:45:12.989Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T07:45:12.990Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T07:45:12.990Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T07:45:12.991Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T07:45:12.992Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:45:12.992Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T07:45:12.993Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:45:12.993Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:45:12.994Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:45:12.995Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.996Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:12.997Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:12.997Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T07:45:12.998Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:12.999Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:13.000Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:13.000Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:45:13.001Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:45:13.002Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:13.003Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:13.003Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:45:13.004Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:45:13.005Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T07:45:13.005Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T07:45:13.006Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:45:13.007Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:45:13.007Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:13.008Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:13.009Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:45:13.009Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:45:13.010Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:13.011Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:45:13.011Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:45:13.012Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:45:13.013Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:45:13.014Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:45:13.014Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:45:13.015Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:13.016Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:45:13.016Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:45:13.018Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:13.019Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:13.019Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:45:13.020Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:45:13.021Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T07:45:13.021Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T07:45:13.022Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:45:13.023Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T07:45:13.023Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T07:47:29.075Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T07:47:29.910Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T07:47:29.913Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T07:47:29.950Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T07:47:29.951Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:29.952Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:47:29.953Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:47:29.954Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:29.955Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T07:47:29.956Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T07:47:29.957Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:29.958Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T07:47:29.959Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:29.960Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T07:47:29.961Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T07:47:29.963Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:47:29.964Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:29.964Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:47:29.965Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:29.966Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:47:29.967Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:47:29.971Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:47:29.973Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:29.974Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:47:29.975Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:29.976Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:29.977Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:29.978Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:29.979Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:47:29.979Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:47:29.980Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T07:47:29.981Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:29.987Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T07:47:29.988Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T07:47:29.989Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T07:47:29.989Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T07:47:29.990Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T07:47:29.991Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T07:47:29.992Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T07:47:29.993Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T07:47:29.994Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T07:47:29.994Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T07:47:29.995Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T07:47:29.996Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T07:47:29.997Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T07:47:29.997Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T07:47:29.998Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T07:47:29.999Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T07:47:30.000Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:47:30.001Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T07:47:30.002Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:47:30.003Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:47:30.004Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:47:30.005Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.006Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.007Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.007Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T07:47:30.008Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:30.009Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.010Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.011Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.011Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:47:30.012Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.013Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.014Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:47:30.014Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:47:30.015Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:30.016Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:30.017Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:47:30.017Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:47:30.018Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.020Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:47:30.021Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:47:30.022Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:47:30.023Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:47:30.023Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:47:30.024Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:47:30.025Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.026Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:47:30.026Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:47:30.027Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.031Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.032Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.033Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:47:30.034Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T07:47:30.034Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T07:47:30.035Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:30.036Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T07:47:30.036Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T07:47:30.037Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:30.038Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:47:30.038Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:47:30.039Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:47:30.040Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.041Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:47:30.041Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:30.042Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.043Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.044Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.044Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:47:30.045Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:47:30.046Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T07:47:30.047Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.047Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T07:47:30.048Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T07:47:30.049Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T07:47:30.049Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T07:47:30.050Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T07:47:30.051Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T07:47:30.051Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T07:47:30.052Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T07:47:30.053Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T07:47:30.053Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T07:47:30.054Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T07:47:30.055Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T07:47:30.055Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T07:47:30.056Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T07:47:30.057Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T07:47:30.057Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T07:47:30.058Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:47:30.059Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T07:47:30.064Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:47:30.065Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:47:30.066Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:47:30.067Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.068Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.069Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.070Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T07:47:30.071Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:30.071Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.072Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.073Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.074Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:47:30.074Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.075Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.076Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:47:30.077Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:47:30.078Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T07:47:30.078Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T07:47:30.079Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:47:30.080Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:47:30.080Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:30.081Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:30.082Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:47:30.083Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:47:30.083Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.085Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:47:30.086Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:47:30.088Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:47:30.089Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:47:30.090Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:47:30.090Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:47:30.091Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.092Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:47:30.092Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:47:30.093Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.094Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.094Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.095Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:47:30.096Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T07:47:30.097Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T07:47:30.097Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:30.098Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T07:47:30.098Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T07:47:30.104Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T07:47:30.105Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T07:47:30.106Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T07:47:30.106Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:47:30.107Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T07:47:30.121Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T07:47:30.121Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T07:47:30.134Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T07:47:30.135Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T07:47:30.135Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:47:30.136Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  },
  {
    "uri": "http://example.org/custom#isFoo",
    "arity": 1,
    "description": "Returns true if the subject is the literal \"foo\""
  }
]
[2025-08-01T07:47:30.137Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T07:47:30.138Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:47:30.138Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T07:47:30.139Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:47:30.140Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T07:47:30.142Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}],"rules":[]}
[2025-08-01T07:47:30.143Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}]
[2025-08-01T07:47:30.143Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}}
[2025-08-01T07:47:30.144Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}
[2025-08-01T07:47:30.145Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:47:30.146Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T07:47:30.146Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T07:47:30.147Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T07:47:30.148Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T07:47:30.148Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T07:47:30.149Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T07:47:30.162Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T07:47:30.163Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T07:47:30.186Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T07:47:30.187Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:30.188Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:47:30.188Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:47:30.189Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.190Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T07:47:30.191Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T07:47:30.192Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.192Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T07:47:30.193Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.194Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T07:47:30.195Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T07:47:30.196Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:47:30.196Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.197Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:47:30.197Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:30.198Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:47:30.199Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:47:30.200Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:47:30.200Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.203Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:47:30.203Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:30.204Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.205Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.206Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.206Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:47:30.207Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:47:30.208Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T07:47:30.208Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.209Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T07:47:30.210Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T07:47:30.210Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T07:47:30.211Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T07:47:30.212Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T07:47:30.212Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T07:47:30.213Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T07:47:30.214Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T07:47:30.214Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T07:47:30.215Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T07:47:30.216Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T07:47:30.217Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T07:47:30.217Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T07:47:30.218Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T07:47:30.219Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T07:47:30.219Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T07:47:30.220Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:47:30.221Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T07:47:30.221Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:47:30.222Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:47:30.223Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:47:30.224Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.224Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.225Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.226Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T07:47:30.227Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:30.227Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.228Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.229Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.230Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:47:30.231Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.231Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.232Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:47:30.233Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:47:30.234Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:30.235Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:30.236Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:47:30.236Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:47:30.237Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.238Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:47:30.238Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:47:30.239Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:47:30.240Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:47:30.241Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:47:30.241Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:47:30.242Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.243Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:47:30.243Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:47:30.244Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.245Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.245Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.246Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:47:30.247Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T07:47:30.247Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T07:47:30.248Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:30.249Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T07:47:30.250Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T07:47:30.250Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:30.251Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:47:30.252Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:47:30.252Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:47:30.253Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.254Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:47:30.255Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:30.256Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.257Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.258Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.259Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:47:30.260Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:47:30.260Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T07:47:30.261Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.262Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T07:47:30.263Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T07:47:30.263Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T07:47:30.264Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T07:47:30.265Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T07:47:30.265Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T07:47:30.266Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T07:47:30.267Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T07:47:30.268Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T07:47:30.269Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T07:47:30.270Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T07:47:30.271Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T07:47:30.271Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T07:47:30.272Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T07:47:30.273Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T07:47:30.273Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T07:47:30.274Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:47:30.275Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T07:47:30.275Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:47:30.276Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:47:30.277Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:47:30.278Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.278Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.279Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.280Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T07:47:30.280Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:30.281Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.282Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.283Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:47:30.284Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:47:30.285Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.286Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.287Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:47:30.287Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:47:30.288Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T07:47:30.289Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T07:47:30.289Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:47:30.290Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:47:30.291Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:30.292Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:30.292Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:47:30.293Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:47:30.294Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.294Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:47:30.295Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:47:30.296Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:47:30.296Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:47:30.297Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:47:30.298Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:47:30.298Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.299Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:47:30.300Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:47:30.301Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.301Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.302Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:47:30.303Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:47:30.303Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T07:47:30.304Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T07:47:30.305Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:47:30.305Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T07:47:30.306Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T07:52:59.459Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T07:53:01.034Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T07:53:01.038Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T07:53:01.071Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T07:53:01.072Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.073Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:53:01.073Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:53:01.075Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.076Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T07:53:01.077Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T07:53:01.078Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.079Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T07:53:01.080Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.082Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T07:53:01.083Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T07:53:01.084Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:53:01.085Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.085Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:53:01.086Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.087Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:53:01.087Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:53:01.091Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:53:01.093Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.094Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:53:01.094Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.095Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.096Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.097Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.098Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:53:01.099Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:53:01.099Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T07:53:01.100Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.101Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T07:53:01.102Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T07:53:01.103Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T07:53:01.103Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T07:53:01.108Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T07:53:01.109Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T07:53:01.110Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T07:53:01.110Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T07:53:01.111Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T07:53:01.112Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T07:53:01.113Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T07:53:01.114Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T07:53:01.114Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T07:53:01.115Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T07:53:01.116Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T07:53:01.117Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T07:53:01.117Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:53:01.118Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T07:53:01.119Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:53:01.119Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:53:01.120Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:53:01.121Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.122Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.123Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.123Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T07:53:01.124Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.125Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.126Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.126Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.127Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:53:01.128Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.129Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.129Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:53:01.130Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:53:01.131Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.131Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.132Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:53:01.133Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:53:01.133Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.135Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:53:01.136Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:53:01.137Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:53:01.137Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:53:01.138Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:53:01.139Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:53:01.139Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.140Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:53:01.141Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:53:01.142Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.142Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.143Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.144Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:53:01.144Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T07:53:01.145Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T07:53:01.149Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.150Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T07:53:01.151Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T07:53:01.151Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.152Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:53:01.153Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:53:01.153Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:53:01.154Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.155Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:53:01.155Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.156Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.157Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.158Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.158Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:53:01.159Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:53:01.160Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T07:53:01.160Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.161Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T07:53:01.162Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T07:53:01.162Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T07:53:01.163Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T07:53:01.164Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T07:53:01.164Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T07:53:01.165Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T07:53:01.166Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T07:53:01.166Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T07:53:01.167Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T07:53:01.168Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T07:53:01.168Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T07:53:01.169Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T07:53:01.170Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T07:53:01.170Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T07:53:01.171Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T07:53:01.172Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:53:01.172Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T07:53:01.173Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:53:01.174Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:53:01.175Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:53:01.175Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.176Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.177Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.177Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T07:53:01.178Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.179Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.180Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.181Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.181Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:53:01.182Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.183Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.184Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:53:01.185Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:53:01.185Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T07:53:01.186Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T07:53:01.187Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:53:01.188Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:53:01.188Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.189Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.190Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:53:01.190Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:53:01.191Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.192Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:53:01.192Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:53:01.193Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:53:01.194Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:53:01.195Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:53:01.195Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:53:01.196Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.196Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:53:01.199Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:53:01.200Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.200Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.201Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.202Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:53:01.202Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T07:53:01.203Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T07:53:01.203Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.204Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T07:53:01.205Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T07:53:01.220Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T07:53:01.221Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T07:53:01.222Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T07:53:01.222Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:53:01.223Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T07:53:01.236Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T07:53:01.237Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T07:53:01.249Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T07:53:01.250Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T07:53:01.250Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:53:01.251Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  },
  {
    "uri": "http://example.org/custom#isFoo",
    "arity": 1,
    "description": "Returns true if the subject is the literal \"foo\""
  }
]
[2025-08-01T07:53:01.252Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T07:53:01.252Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:53:01.253Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T07:53:01.254Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T07:53:01.255Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T07:53:01.255Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}],"rules":[]}
[2025-08-01T07:53:01.256Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}]
[2025-08-01T07:53:01.257Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}}
[2025-08-01T07:53:01.257Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}
[2025-08-01T07:53:01.258Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:53:01.260Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T07:53:01.261Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T07:53:01.261Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T07:53:01.262Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T07:53:01.262Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T07:53:01.263Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T07:53:01.266Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T07:53:01.267Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T07:53:01.289Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T07:53:01.290Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.291Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:53:01.291Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:53:01.292Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.293Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T07:53:01.293Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T07:53:01.294Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.295Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T07:53:01.296Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.296Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T07:53:01.297Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T07:53:01.298Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:53:01.299Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.299Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T07:53:01.300Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.301Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:53:01.301Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:53:01.302Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:53:01.303Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.303Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:53:01.304Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.305Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.306Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.306Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.308Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:53:01.309Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:53:01.310Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T07:53:01.311Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.311Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T07:53:01.312Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T07:53:01.313Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T07:53:01.313Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T07:53:01.314Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T07:53:01.315Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T07:53:01.315Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T07:53:01.316Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T07:53:01.317Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T07:53:01.317Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T07:53:01.318Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T07:53:01.319Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T07:53:01.319Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T07:53:01.320Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T07:53:01.321Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T07:53:01.321Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T07:53:01.322Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:53:01.323Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T07:53:01.323Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:53:01.324Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:53:01.325Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:53:01.325Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.326Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.327Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.328Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T07:53:01.328Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.329Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.330Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.331Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.332Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:53:01.332Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.333Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.334Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:53:01.334Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:53:01.335Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.335Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.336Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:53:01.337Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:53:01.337Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.338Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:53:01.338Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:53:01.339Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:53:01.340Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:53:01.341Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:53:01.341Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:53:01.342Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.343Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:53:01.343Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:53:01.344Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.345Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.345Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.346Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:53:01.346Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T07:53:01.347Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T07:53:01.348Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.348Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T07:53:01.349Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T07:53:01.350Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.350Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T07:53:01.351Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T07:53:01.352Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T07:53:01.352Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.353Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:53:01.353Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.354Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.355Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.355Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.356Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:53:01.357Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:53:01.357Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T07:53:01.359Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.360Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T07:53:01.361Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T07:53:01.361Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T07:53:01.362Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T07:53:01.363Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T07:53:01.363Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T07:53:01.364Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T07:53:01.365Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T07:53:01.365Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T07:53:01.366Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T07:53:01.366Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T07:53:01.367Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T07:53:01.368Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T07:53:01.368Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T07:53:01.369Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T07:53:01.370Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T07:53:01.370Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T07:53:01.371Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T07:53:01.372Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T07:53:01.372Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:53:01.373Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:53:01.374Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.375Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.375Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.376Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T07:53:01.377Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.377Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.378Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.379Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T07:53:01.379Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T07:53:01.380Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.381Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.382Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:53:01.382Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T07:53:01.383Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T07:53:01.384Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T07:53:01.384Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:53:01.385Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:53:01.386Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.386Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.387Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:53:01.387Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T07:53:01.388Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.389Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T07:53:01.389Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T07:53:01.390Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T07:53:01.391Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T07:53:01.392Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T07:53:01.392Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T07:53:01.393Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.393Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T07:53:01.394Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T07:53:01.395Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.395Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.396Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T07:53:01.397Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T07:53:01.397Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T07:53:01.398Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T07:53:01.399Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T07:53:01.399Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T07:53:01.400Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:00:19.629Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T08:00:21.400Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:00:21.404Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T08:00:21.442Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:00:21.443Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.443Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:00:21.444Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:00:21.446Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.446Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:00:21.448Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:00:21.449Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.450Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:00:21.452Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.453Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:00:21.454Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:00:21.455Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:00:21.456Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.457Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:00:21.458Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.459Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:00:21.459Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:00:21.464Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:00:21.466Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.466Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:00:21.468Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.469Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.470Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.471Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.471Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:00:21.472Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:00:21.473Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:00:21.474Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.475Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:00:21.479Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:00:21.480Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:00:21.481Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:00:21.482Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:00:21.483Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:00:21.483Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:00:21.485Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:00:21.486Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:00:21.486Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:00:21.487Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:00:21.488Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:00:21.489Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:00:21.489Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:00:21.490Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:00:21.491Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:00:21.491Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:00:21.492Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:00:21.493Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:00:21.494Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:00:21.495Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:00:21.496Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.497Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.497Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.498Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:00:21.499Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.500Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.500Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.501Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.502Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:00:21.503Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.503Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.504Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:00:21.505Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:00:21.506Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.506Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.507Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:00:21.508Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:00:21.508Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.510Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:00:21.511Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:00:21.512Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:00:21.513Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:00:21.513Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:00:21.514Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:00:21.515Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.516Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:00:21.517Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:00:21.518Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.519Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.523Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.523Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:00:21.524Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:00:21.525Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:00:21.525Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.526Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:00:21.527Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:00:21.527Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.528Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:00:21.529Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:00:21.529Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:00:21.530Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.531Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:00:21.532Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.533Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.535Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.535Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.536Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:00:21.537Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:00:21.538Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:00:21.538Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.539Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:00:21.540Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:00:21.540Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:00:21.541Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:00:21.542Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:00:21.542Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:00:21.543Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:00:21.544Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:00:21.544Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:00:21.545Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:00:21.546Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:00:21.547Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:00:21.547Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:00:21.548Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:00:21.549Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:00:21.550Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:00:21.551Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:00:21.551Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:00:21.553Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:00:21.554Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:00:21.555Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:00:21.556Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.557Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.557Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.558Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:00:21.559Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.560Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.560Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.561Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.562Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:00:21.563Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.564Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.564Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:00:21.566Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:00:21.566Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:00:21.567Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:00:21.568Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:00:21.569Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:00:21.570Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.570Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.571Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:00:21.572Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:00:21.573Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.573Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:00:21.574Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:00:21.575Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:00:21.577Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:00:21.578Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:00:21.579Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:00:21.579Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.580Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:00:21.581Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:00:21.581Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.582Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.583Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.584Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:00:21.585Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:00:21.585Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:00:21.586Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.587Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:00:21.587Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:00:21.602Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T08:00:21.603Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T08:00:21.604Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T08:00:21.605Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:00:21.605Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T08:00:21.620Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T08:00:21.621Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T08:00:21.633Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T08:00:21.634Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:00:21.635Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:00:21.636Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  },
  {
    "uri": "http://example.org/custom#isFoo",
    "arity": 1,
    "description": "Returns true if the subject is the literal \"foo\""
  }
]
[2025-08-01T08:00:21.637Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T08:00:21.637Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:00:21.638Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T08:00:21.639Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:00:21.640Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T08:00:21.642Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}],"rules":[]}
[2025-08-01T08:00:21.642Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}]
[2025-08-01T08:00:21.643Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}}
[2025-08-01T08:00:21.644Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}
[2025-08-01T08:00:21.644Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:00:21.645Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:00:21.646Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T08:00:21.646Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T08:00:21.647Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:00:21.648Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T08:00:21.649Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T08:00:21.652Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:00:21.653Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T08:00:21.676Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:00:21.676Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.677Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:00:21.678Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:00:21.678Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.679Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:00:21.680Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:00:21.681Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.682Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:00:21.682Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.683Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:00:21.684Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:00:21.685Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:00:21.686Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.687Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:00:21.687Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.688Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:00:21.689Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:00:21.690Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:00:21.690Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.691Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:00:21.693Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.694Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.695Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.696Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.696Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:00:21.697Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:00:21.698Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:00:21.699Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.699Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:00:21.700Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:00:21.702Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:00:21.702Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:00:21.703Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:00:21.704Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:00:21.704Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:00:21.705Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:00:21.706Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:00:21.707Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:00:21.707Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:00:21.708Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:00:21.709Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:00:21.709Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:00:21.710Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:00:21.710Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:00:21.711Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:00:21.712Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:00:21.713Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:00:21.713Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:00:21.714Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:00:21.715Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.716Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.717Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.718Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:00:21.718Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.719Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.720Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.721Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.721Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:00:21.722Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.723Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.724Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:00:21.724Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:00:21.725Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.726Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.726Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:00:21.727Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:00:21.728Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.728Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:00:21.729Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:00:21.730Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:00:21.731Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:00:21.731Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:00:21.732Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:00:21.733Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.733Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:00:21.734Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:00:21.735Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.736Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.737Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.737Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:00:21.738Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:00:21.739Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:00:21.739Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.740Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:00:21.740Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:00:21.741Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.742Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:00:21.742Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:00:21.743Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:00:21.744Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.745Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:00:21.745Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.746Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.747Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.748Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.750Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:00:21.751Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:00:21.751Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:00:21.752Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.753Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:00:21.754Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:00:21.754Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:00:21.755Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:00:21.756Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:00:21.756Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:00:21.757Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:00:21.758Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:00:21.758Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:00:21.759Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:00:21.759Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:00:21.760Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:00:21.761Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:00:21.762Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:00:21.762Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:00:21.763Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:00:21.763Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:00:21.764Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:00:21.765Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:00:21.766Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:00:21.767Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:00:21.768Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.769Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.769Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.770Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:00:21.771Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.771Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.772Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.773Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:00:21.774Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:00:21.774Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.775Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.776Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:00:21.777Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:00:21.777Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:00:21.778Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:00:21.779Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:00:21.779Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:00:21.780Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.781Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.781Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:00:21.782Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:00:21.783Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.784Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:00:21.784Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:00:21.785Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:00:21.786Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:00:21.787Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:00:21.788Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:00:21.788Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.789Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:00:21.790Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:00:21.790Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.791Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.792Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:00:21.792Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:00:21.793Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:00:21.793Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:00:21.794Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:00:21.795Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:00:21.795Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:01:11.346Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T08:01:12.516Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:01:12.519Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T08:01:12.555Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:01:12.556Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.557Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:12.558Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:12.559Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.560Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:01:12.561Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:01:12.562Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.563Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:01:12.564Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.566Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:01:12.567Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:01:12.568Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:12.569Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.569Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:01:12.570Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.571Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:01:12.572Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:01:12.576Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:12.578Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.578Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:12.579Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.584Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.585Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.586Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.587Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:12.588Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:01:12.589Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:01:12.589Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.590Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:01:12.591Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:01:12.592Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:01:12.592Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:01:12.593Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:01:12.594Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:01:12.595Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:01:12.595Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:01:12.596Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:01:12.597Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:01:12.598Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:01:12.598Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:01:12.599Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:01:12.600Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:01:12.601Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:01:12.601Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:01:12.602Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:01:12.603Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:01:12.604Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:01:12.604Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:12.605Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:12.606Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.607Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.608Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.609Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:01:12.609Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.610Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.611Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.612Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.613Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:01:12.613Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.614Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.615Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:12.616Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:12.616Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.617Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.618Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:12.618Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:12.619Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.621Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:12.622Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:01:12.626Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:01:12.628Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:01:12.628Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:01:12.629Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:01:12.630Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.631Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:01:12.632Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:01:12.633Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.633Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.634Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.635Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:01:12.636Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:01:12.636Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:01:12.637Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.638Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:01:12.638Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:01:12.639Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.640Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:01:12.641Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:01:12.641Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:12.642Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.643Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:12.644Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.645Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.646Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.647Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.648Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:12.648Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:01:12.649Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:01:12.650Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.651Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:01:12.651Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:01:12.652Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:01:12.653Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:01:12.653Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:01:12.654Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:01:12.655Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:01:12.656Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:01:12.656Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:01:12.657Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:01:12.658Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:01:12.658Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:01:12.659Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:01:12.660Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:01:12.661Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:01:12.662Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:01:12.663Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:01:12.663Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:01:12.664Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:01:12.665Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:12.666Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:12.666Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.667Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.668Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.669Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:01:12.669Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.670Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.671Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.672Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.672Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:01:12.673Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.674Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.675Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:12.676Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:12.679Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:01:12.680Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:01:12.681Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:12.682Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:12.682Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.683Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.684Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:12.685Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:12.685Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.686Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:12.687Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:01:12.688Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:01:12.689Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:01:12.689Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:01:12.690Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:01:12.691Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.691Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:01:12.692Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:01:12.693Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.694Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.695Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.696Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:01:12.696Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:01:12.697Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:01:12.698Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.698Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:01:12.699Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:01:12.714Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T08:01:12.715Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T08:01:12.716Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T08:01:12.717Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:01:12.718Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T08:01:12.733Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T08:01:12.733Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T08:01:12.747Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T08:01:12.748Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:01:12.749Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:01:12.749Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  },
  {
    "uri": "http://example.org/custom#isFoo",
    "arity": 1,
    "description": "Returns true if the subject is the literal \"foo\""
  }
]
[2025-08-01T08:01:12.750Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T08:01:12.751Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:01:12.752Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T08:01:12.752Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:01:12.753Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T08:01:12.754Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}],"rules":[]}
[2025-08-01T08:01:12.755Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}]
[2025-08-01T08:01:12.756Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}}
[2025-08-01T08:01:12.756Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}
[2025-08-01T08:01:12.757Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:01:12.758Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:01:12.758Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T08:01:12.759Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T08:01:12.760Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:01:12.761Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T08:01:12.762Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T08:01:12.764Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:01:12.765Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T08:01:12.789Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:01:12.790Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.791Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:12.791Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:12.792Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.793Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:01:12.794Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:01:12.795Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.796Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:01:12.798Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.799Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:01:12.799Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:01:12.800Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:12.801Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.802Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:01:12.802Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.803Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:01:12.804Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:01:12.804Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:12.805Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.806Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:12.807Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.807Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.808Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.809Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.810Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:12.811Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:01:12.811Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:01:12.812Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.813Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:01:12.813Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:01:12.814Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:01:12.815Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:01:12.816Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:01:12.816Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:01:12.817Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:01:12.818Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:01:12.818Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:01:12.819Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:01:12.820Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:01:12.820Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:01:12.821Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:01:12.822Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:01:12.822Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:01:12.823Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:01:12.824Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:01:12.825Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:01:12.825Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:01:12.826Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:12.827Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:12.828Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.828Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.829Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.830Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:01:12.830Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.831Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.832Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.833Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.833Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:01:12.834Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.835Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.836Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:12.836Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:12.837Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.838Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.838Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:12.839Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:12.840Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.840Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:12.841Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:01:12.842Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:01:12.843Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:01:12.843Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:01:12.844Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:01:12.845Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.845Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:01:12.846Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:01:12.847Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.848Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.848Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.849Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:01:12.850Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:01:12.850Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:01:12.851Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.853Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:01:12.853Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:01:12.854Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.854Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:01:12.855Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:01:12.856Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:12.857Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.857Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:12.858Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.859Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.860Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.861Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.862Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:12.863Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:01:12.863Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:01:12.864Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.865Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:01:12.865Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:01:12.866Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:01:12.867Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:01:12.867Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:01:12.868Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:01:12.869Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:01:12.869Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:01:12.870Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:01:12.871Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:01:12.871Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:01:12.872Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:01:12.873Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:01:12.873Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:01:12.874Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:01:12.875Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:01:12.876Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:01:12.876Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:01:12.877Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:01:12.878Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:12.879Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:12.879Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.880Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.881Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.881Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:01:12.882Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.883Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.884Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.885Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:12.885Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:01:12.886Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.887Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.888Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:12.888Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:12.889Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:01:12.890Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:01:12.890Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:12.891Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:12.892Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.893Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.893Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:12.894Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:12.895Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.895Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:12.896Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:01:12.897Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:01:12.897Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:01:12.898Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:01:12.899Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:01:12.899Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.900Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:01:12.901Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:01:12.902Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.902Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.903Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:12.904Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:01:12.904Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:01:12.905Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:01:12.906Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:12.908Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:01:12.908Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:01:47.277Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T08:01:48.421Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:01:48.425Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T08:01:48.458Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:01:48.459Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.460Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:48.461Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:48.462Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.463Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:01:48.464Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:01:48.465Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.466Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:01:48.467Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.469Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:01:48.470Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:01:48.471Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:48.472Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.473Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:01:48.473Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.474Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:01:48.475Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:01:48.483Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:48.485Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.485Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:48.486Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.487Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.488Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.489Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.490Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:48.491Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:01:48.491Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:01:48.492Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.493Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:01:48.494Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:01:48.495Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:01:48.495Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:01:48.496Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:01:48.497Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:01:48.498Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:01:48.498Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:01:48.499Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:01:48.500Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:01:48.501Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:01:48.501Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:01:48.502Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:01:48.503Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:01:48.504Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:01:48.504Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:01:48.505Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:01:48.506Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:01:48.507Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:01:48.508Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:48.508Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:48.510Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.511Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.511Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.512Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:01:48.513Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.514Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.515Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.515Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.516Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:01:48.517Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.518Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.518Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:48.519Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:48.524Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.525Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.526Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:48.527Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:48.527Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.529Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:48.530Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:01:48.531Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:01:48.532Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:01:48.532Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:01:48.533Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:01:48.534Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.535Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:01:48.535Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:01:48.536Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.537Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.538Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.538Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:01:48.539Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:01:48.540Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:01:48.541Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.542Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:01:48.543Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:01:48.543Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.544Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:01:48.545Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:01:48.545Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:48.546Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.547Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:48.547Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.548Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.549Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.550Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.551Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:48.551Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:01:48.552Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:01:48.553Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.553Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:01:48.554Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:01:48.555Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:01:48.556Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:01:48.556Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:01:48.557Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:01:48.558Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:01:48.559Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:01:48.560Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:01:48.560Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:01:48.561Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:01:48.562Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:01:48.563Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:01:48.563Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:01:48.564Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:01:48.565Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:01:48.565Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:01:48.566Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:01:48.567Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:01:48.567Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:48.568Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:48.569Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.570Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.571Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.571Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:01:48.575Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.576Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.577Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.577Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.578Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:01:48.579Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.580Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.580Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:48.581Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:48.582Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:01:48.583Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:01:48.583Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:48.584Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:48.585Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.585Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.586Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:48.587Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:48.587Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.588Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:48.589Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:01:48.590Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:01:48.591Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:01:48.592Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:01:48.593Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:01:48.593Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.594Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:01:48.595Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:01:48.596Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.596Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.597Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.598Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:01:48.598Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:01:48.599Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:01:48.600Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.600Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:01:48.601Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:01:48.616Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T08:01:48.617Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T08:01:48.617Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T08:01:48.618Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:01:48.619Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T08:01:48.633Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T08:01:48.634Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T08:01:48.648Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T08:01:48.649Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:01:48.649Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:01:48.650Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  },
  {
    "uri": "http://example.org/custom#isFoo",
    "arity": 1,
    "description": "Returns true if the subject is the literal \"foo\""
  }
]
[2025-08-01T08:01:48.651Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T08:01:48.652Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:01:48.652Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T08:01:48.653Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:01:48.654Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T08:01:48.655Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}],"rules":[]}
[2025-08-01T08:01:48.656Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}]
[2025-08-01T08:01:48.656Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}}
[2025-08-01T08:01:48.657Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}
[2025-08-01T08:01:48.658Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:01:48.659Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:01:48.660Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T08:01:48.660Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T08:01:48.661Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:01:48.662Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T08:01:48.662Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T08:01:48.665Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:01:48.666Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T08:01:48.691Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:01:48.691Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.692Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:48.693Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:48.694Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.694Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:01:48.695Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:01:48.696Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.696Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:01:48.697Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.698Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:01:48.699Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:01:48.699Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:48.700Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.701Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:01:48.701Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.702Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:01:48.703Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:01:48.703Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:48.704Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.705Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:48.706Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.707Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.708Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.709Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.710Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:48.710Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:01:48.711Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:01:48.712Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.712Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:01:48.713Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:01:48.714Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:01:48.715Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:01:48.715Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:01:48.716Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:01:48.717Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:01:48.718Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:01:48.719Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:01:48.719Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:01:48.720Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:01:48.721Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:01:48.721Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:01:48.722Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:01:48.723Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:01:48.724Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:01:48.724Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:01:48.725Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:01:48.726Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:01:48.726Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:48.727Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:48.728Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.729Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.729Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.730Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:01:48.731Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.732Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.732Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.733Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.734Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:01:48.734Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.735Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.736Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:48.737Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:48.737Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.738Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.739Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:48.739Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:48.740Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.740Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:48.741Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:01:48.742Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:01:48.743Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:01:48.744Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:01:48.746Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:01:48.746Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.747Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:01:48.748Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:01:48.748Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.749Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.750Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.750Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:01:48.751Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:01:48.752Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:01:48.752Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.753Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:01:48.754Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:01:48.754Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.755Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:01:48.756Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:01:48.756Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:48.757Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.758Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:48.758Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.759Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.760Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.761Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.761Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:48.762Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:01:48.763Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:01:48.763Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.764Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:01:48.765Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:01:48.765Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:01:48.766Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:01:48.767Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:01:48.767Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:01:48.768Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:01:48.769Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:01:48.769Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:01:48.770Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:01:48.770Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:01:48.771Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:01:48.772Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:01:48.773Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:01:48.773Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:01:48.774Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:01:48.775Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:01:48.776Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:01:48.776Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:01:48.777Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:48.778Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:48.779Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.779Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.780Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.781Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:01:48.781Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.782Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.783Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.784Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:01:48.784Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:01:48.785Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.786Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.787Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:48.787Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:01:48.788Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:01:48.789Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:01:48.790Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:48.790Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:48.791Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.792Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.793Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:48.794Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:01:48.794Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.795Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:01:48.795Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:01:48.796Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:01:48.797Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:01:48.798Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:01:48.799Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:01:48.800Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.801Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:01:48.802Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:01:48.802Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.803Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.804Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:01:48.804Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:01:48.805Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:01:48.806Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:01:48.807Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:01:48.807Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:01:48.808Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:02:20.938Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T08:02:21.865Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:02:21.871Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T08:02:21.911Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:02:21.912Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:21.913Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:02:21.913Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:02:21.915Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:21.916Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:02:21.917Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:02:21.919Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:21.920Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:02:21.921Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:21.923Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:02:21.924Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:02:21.925Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:02:21.926Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:21.927Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:02:21.927Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:21.928Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:02:21.929Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:02:21.933Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:02:21.935Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:21.936Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:02:21.936Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:21.937Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:21.938Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:21.939Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:21.940Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:02:21.945Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:02:21.946Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:02:21.946Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:21.947Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:02:21.948Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:02:21.949Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:02:21.950Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:02:21.950Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:02:21.951Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:02:21.952Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:02:21.953Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:02:21.953Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:02:21.954Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:02:21.955Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:02:21.956Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:02:21.957Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:02:21.957Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:02:21.958Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:02:21.959Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:02:21.960Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:02:21.960Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:02:21.961Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:02:21.962Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:02:21.963Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:02:21.964Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:21.965Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:21.965Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:21.966Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:02:21.967Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:21.968Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:21.969Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:21.969Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:21.970Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:02:21.971Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:21.972Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:21.973Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:02:21.973Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:02:21.974Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:21.975Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:21.975Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:02:21.976Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:02:21.977Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:21.978Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:02:21.979Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:02:21.980Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:02:21.981Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:02:21.982Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:02:21.982Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:02:21.983Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:21.987Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:02:21.988Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:02:21.989Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:21.990Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:21.990Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:21.991Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:02:21.992Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:02:21.992Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:02:21.993Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:21.994Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:02:21.994Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:02:21.995Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:21.996Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:02:21.996Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:02:21.997Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:02:21.998Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:21.999Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:02:21.999Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:22.000Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.001Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.002Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.002Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:02:22.003Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:02:22.004Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:02:22.005Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.006Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:02:22.006Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:02:22.007Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:02:22.008Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:02:22.008Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:02:22.009Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:02:22.010Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:02:22.010Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:02:22.011Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:02:22.012Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:02:22.013Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:02:22.013Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:02:22.014Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:02:22.015Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:02:22.015Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:02:22.016Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:02:22.017Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:02:22.018Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:02:22.018Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:02:22.019Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:02:22.020Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:02:22.021Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.021Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.022Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.023Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:02:22.024Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:22.024Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.025Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.026Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.027Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:02:22.028Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.028Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.029Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:02:22.030Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:02:22.030Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:02:22.031Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:02:22.032Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:02:22.033Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:02:22.033Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:22.034Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:22.037Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:02:22.038Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:02:22.038Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.039Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:02:22.040Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:02:22.041Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:02:22.041Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:02:22.042Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:02:22.043Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:02:22.043Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.044Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:02:22.045Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:02:22.045Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.046Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.047Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.048Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:02:22.048Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:02:22.049Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:02:22.049Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:22.050Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:02:22.051Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:02:22.065Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T08:02:22.066Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T08:02:22.067Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T08:02:22.067Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:02:22.068Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T08:02:22.082Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T08:02:22.082Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T08:02:22.095Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T08:02:22.095Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:02:22.096Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:02:22.098Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  },
  {
    "uri": "http://example.org/custom#isFoo",
    "arity": 1,
    "description": "Returns true if the subject is the literal \"foo\""
  }
]
[2025-08-01T08:02:22.099Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T08:02:22.099Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:02:22.100Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T08:02:22.101Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:02:22.102Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T08:02:22.103Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}],"rules":[]}
[2025-08-01T08:02:22.103Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}]
[2025-08-01T08:02:22.104Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}}
[2025-08-01T08:02:22.105Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}
[2025-08-01T08:02:22.106Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:02:22.106Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:02:22.107Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T08:02:22.108Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T08:02:22.108Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:02:22.109Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T08:02:22.110Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T08:02:22.112Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:02:22.113Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T08:02:22.136Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:02:22.137Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:22.137Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:02:22.138Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:02:22.139Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.140Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:02:22.140Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:02:22.141Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.142Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:02:22.143Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.143Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:02:22.144Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:02:22.145Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:02:22.146Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.146Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:02:22.148Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:22.149Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:02:22.150Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:02:22.150Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:02:22.151Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.152Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:02:22.153Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:22.153Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.154Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.155Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.156Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:02:22.157Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:02:22.157Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:02:22.158Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.159Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:02:22.159Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:02:22.160Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:02:22.161Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:02:22.161Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:02:22.162Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:02:22.163Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:02:22.163Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:02:22.164Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:02:22.165Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:02:22.165Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:02:22.166Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:02:22.167Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:02:22.167Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:02:22.168Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:02:22.169Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:02:22.170Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:02:22.170Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:02:22.171Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:02:22.172Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:02:22.173Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:02:22.173Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.174Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.175Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.175Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:02:22.176Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:22.177Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.178Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.178Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.179Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:02:22.180Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.181Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.181Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:02:22.182Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:02:22.182Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:22.183Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:22.184Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:02:22.184Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:02:22.185Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.186Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:02:22.186Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:02:22.188Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:02:22.188Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:02:22.189Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:02:22.190Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:02:22.190Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.191Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:02:22.192Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:02:22.192Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.193Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.194Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.194Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:02:22.195Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:02:22.196Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:02:22.196Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:22.197Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:02:22.198Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:02:22.198Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:22.199Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:02:22.199Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:02:22.200Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:02:22.202Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.203Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:02:22.204Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:22.205Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.205Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.206Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.207Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:02:22.207Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:02:22.208Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:02:22.209Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.210Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:02:22.210Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:02:22.211Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:02:22.212Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:02:22.212Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:02:22.213Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:02:22.214Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:02:22.214Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:02:22.215Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:02:22.215Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:02:22.216Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:02:22.217Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:02:22.217Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:02:22.218Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:02:22.219Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:02:22.219Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:02:22.220Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:02:22.221Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:02:22.222Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:02:22.222Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:02:22.223Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:02:22.224Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.225Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.225Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.226Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:02:22.227Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:22.227Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.228Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.229Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:02:22.230Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:02:22.230Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.231Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.232Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:02:22.232Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:02:22.233Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:02:22.234Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:02:22.235Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:02:22.235Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:02:22.236Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:22.237Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:22.237Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:02:22.238Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:02:22.239Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.239Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:02:22.240Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:02:22.241Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:02:22.241Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:02:22.242Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:02:22.243Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:02:22.243Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.244Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:02:22.245Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:02:22.245Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.246Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.247Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:02:22.247Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:02:22.248Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:02:22.249Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:02:22.249Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:02:22.250Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:02:22.251Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:04:41.504Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T08:04:43.129Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:04:43.133Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T08:04:43.170Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:04:43.171Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.172Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:04:43.173Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:04:43.174Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.175Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:04:43.176Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:04:43.178Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.178Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:04:43.179Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.181Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:04:43.182Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:04:43.183Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:04:43.184Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.185Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:04:43.186Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.186Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:04:43.187Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:04:43.191Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:04:43.193Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.194Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:04:43.195Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.196Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.197Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.198Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.203Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:04:43.203Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:04:43.204Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:04:43.205Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.206Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:04:43.207Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:04:43.207Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:04:43.208Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:04:43.209Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:04:43.210Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:04:43.211Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:04:43.211Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:04:43.212Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:04:43.213Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:04:43.214Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:04:43.215Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:04:43.215Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:04:43.216Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:04:43.217Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:04:43.217Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:04:43.218Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:04:43.219Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:04:43.220Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:04:43.221Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:04:43.222Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:04:43.223Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.224Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.225Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.226Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:04:43.226Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.227Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.228Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.229Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.230Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:04:43.231Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.231Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.232Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:04:43.233Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:04:43.233Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.234Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.235Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:04:43.236Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:04:43.237Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.239Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:04:43.240Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:04:43.241Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:04:43.242Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:04:43.242Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:04:43.246Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:04:43.247Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.248Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:04:43.249Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:04:43.250Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.250Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.251Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.252Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:04:43.253Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:04:43.253Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:04:43.255Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.256Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:04:43.256Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:04:43.257Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.258Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:04:43.259Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:04:43.259Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:04:43.260Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.261Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:04:43.262Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.262Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.263Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.264Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.265Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:04:43.266Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:04:43.266Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:04:43.267Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.268Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:04:43.268Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:04:43.269Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:04:43.270Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:04:43.271Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:04:43.272Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:04:43.273Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:04:43.274Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:04:43.274Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:04:43.275Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:04:43.276Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:04:43.276Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:04:43.277Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:04:43.278Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:04:43.278Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:04:43.279Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:04:43.280Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:04:43.280Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:04:43.281Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:04:43.282Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:04:43.283Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:04:43.284Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.284Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.285Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.286Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:04:43.287Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.288Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.289Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.290Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.291Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:04:43.291Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.292Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.293Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:04:43.294Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:04:43.294Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:04:43.295Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:04:43.296Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:04:43.296Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:04:43.299Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.300Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.300Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:04:43.301Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:04:43.302Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.303Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:04:43.304Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:04:43.305Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:04:43.306Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:04:43.307Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:04:43.307Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:04:43.308Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.309Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:04:43.309Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:04:43.310Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.311Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.311Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.312Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:04:43.313Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:04:43.313Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:04:43.314Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.315Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:04:43.315Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:04:43.331Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T08:04:43.331Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T08:04:43.332Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T08:04:43.333Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:04:43.334Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T08:04:43.348Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T08:04:43.348Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T08:04:43.362Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T08:04:43.363Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:04:43.364Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:04:43.364Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  },
  {
    "uri": "http://example.org/custom#isFoo",
    "arity": 1,
    "description": "Returns true if the subject is the literal \"foo\""
  }
]
[2025-08-01T08:04:43.365Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T08:04:43.366Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:04:43.367Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T08:04:43.368Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:04:43.368Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T08:04:43.369Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}],"rules":[]}
[2025-08-01T08:04:43.370Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}]
[2025-08-01T08:04:43.371Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}}
[2025-08-01T08:04:43.372Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}
[2025-08-01T08:04:43.373Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:04:43.374Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:04:43.374Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T08:04:43.375Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T08:04:43.375Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:04:43.376Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T08:04:43.377Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T08:04:43.380Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:04:43.381Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T08:04:43.404Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:04:43.405Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.406Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:04:43.407Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:04:43.407Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.408Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:04:43.409Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:04:43.409Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.410Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:04:43.411Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.412Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:04:43.413Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:04:43.415Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:04:43.415Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.416Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:04:43.416Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.417Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:04:43.418Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:04:43.418Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:04:43.419Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.420Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:04:43.421Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.422Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.423Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.424Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.425Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:04:43.425Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:04:43.426Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:04:43.427Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.427Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:04:43.428Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:04:43.429Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:04:43.429Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:04:43.430Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:04:43.431Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:04:43.431Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:04:43.432Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:04:43.433Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:04:43.433Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:04:43.434Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:04:43.435Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:04:43.436Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:04:43.436Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:04:43.437Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:04:43.438Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:04:43.439Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:04:43.440Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:04:43.440Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:04:43.441Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:04:43.442Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:04:43.443Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.443Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.444Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.445Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:04:43.445Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.446Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.447Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.448Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.448Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:04:43.449Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.450Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.451Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:04:43.451Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:04:43.452Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.453Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.454Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:04:43.454Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:04:43.455Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.456Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:04:43.457Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:04:43.458Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:04:43.458Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:04:43.459Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:04:43.460Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:04:43.460Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.461Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:04:43.462Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:04:43.462Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.463Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.464Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.464Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:04:43.465Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:04:43.466Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:04:43.466Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.467Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:04:43.468Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:04:43.468Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.469Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:04:43.471Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:04:43.472Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:04:43.473Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.473Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:04:43.474Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.475Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.476Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.476Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.477Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:04:43.478Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:04:43.479Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:04:43.479Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.480Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:04:43.481Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:04:43.481Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:04:43.482Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:04:43.483Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:04:43.483Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:04:43.484Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:04:43.485Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:04:43.485Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:04:43.486Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:04:43.487Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:04:43.487Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:04:43.488Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:04:43.489Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:04:43.490Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:04:43.491Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:04:43.491Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:04:43.492Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:04:43.493Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:04:43.493Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:04:43.494Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:04:43.495Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.495Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.496Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.497Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:04:43.498Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.498Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.499Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.500Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:04:43.501Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:04:43.501Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.502Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.503Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:04:43.503Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:04:43.504Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:04:43.505Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:04:43.506Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:04:43.506Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:04:43.507Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.508Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.508Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:04:43.509Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:04:43.509Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.510Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:04:43.511Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:04:43.512Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:04:43.512Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:04:43.513Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:04:43.513Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:04:43.514Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.515Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:04:43.515Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:04:43.516Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.517Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.518Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:04:43.518Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:04:43.519Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:04:43.519Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:04:43.520Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:04:43.521Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:04:43.521Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:05:34.485Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T08:05:35.314Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:05:35.318Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T08:05:35.355Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:05:35.355Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.356Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:05:35.357Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:05:35.358Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.359Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:05:35.360Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:05:35.362Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.363Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:05:35.364Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.366Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:05:35.367Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:05:35.368Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:05:35.369Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.370Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:05:35.370Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.371Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:05:35.372Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:05:35.381Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:05:35.383Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.384Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:05:35.385Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.386Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.387Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.388Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.389Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:05:35.390Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:05:35.391Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:05:35.392Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.393Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:05:35.394Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:05:35.395Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:05:35.395Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:05:35.396Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:05:35.397Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:05:35.398Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:05:35.399Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:05:35.400Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:05:35.401Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:05:35.402Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:05:35.403Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:05:35.403Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:05:35.404Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:05:35.405Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:05:35.406Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:05:35.407Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:05:35.407Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:05:35.408Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:05:35.409Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:05:35.410Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:05:35.412Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.412Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.413Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.414Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:05:35.415Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.416Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.418Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.418Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.419Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:05:35.420Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.421Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.422Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:05:35.423Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:05:35.427Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.428Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.429Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:05:35.429Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:05:35.430Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.432Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:05:35.433Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:05:35.434Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:05:35.435Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:05:35.436Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:05:35.437Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:05:35.437Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.438Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:05:35.439Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:05:35.440Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.441Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.442Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.442Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:05:35.443Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:05:35.444Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:05:35.445Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.445Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:05:35.446Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:05:35.447Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.448Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:05:35.449Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:05:35.449Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:05:35.451Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.451Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:05:35.452Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.453Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.454Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.455Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.456Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:05:35.457Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:05:35.457Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:05:35.458Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.459Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:05:35.460Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:05:35.460Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:05:35.461Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:05:35.462Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:05:35.463Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:05:35.464Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:05:35.464Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:05:35.465Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:05:35.466Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:05:35.467Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:05:35.468Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:05:35.469Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:05:35.470Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:05:35.471Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:05:35.471Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:05:35.472Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:05:35.473Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:05:35.474Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:05:35.474Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:05:35.475Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:05:35.476Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.477Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.478Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.479Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:05:35.482Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.483Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.484Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.485Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.486Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:05:35.488Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.488Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.489Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:05:35.490Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:05:35.491Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:05:35.492Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:05:35.492Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:05:35.493Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:05:35.494Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.495Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.495Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:05:35.496Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:05:35.497Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.498Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:05:35.498Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:05:35.500Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:05:35.501Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:05:35.502Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:05:35.503Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:05:35.504Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.505Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:05:35.505Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:05:35.506Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.507Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.508Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.508Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:05:35.509Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:05:35.510Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:05:35.511Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.511Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:05:35.512Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:05:35.528Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T08:05:35.529Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T08:05:35.530Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T08:05:35.531Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:05:35.532Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T08:05:35.546Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T08:05:35.547Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T08:05:35.562Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T08:05:35.562Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:05:35.563Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:05:35.564Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  },
  {
    "uri": "http://example.org/custom#isFoo",
    "arity": 1,
    "description": "Returns true if the subject is the literal \"foo\""
  }
]
[2025-08-01T08:05:35.564Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T08:05:35.565Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:05:35.566Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T08:05:35.567Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:05:35.568Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T08:05:35.568Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}],"rules":[]}
[2025-08-01T08:05:35.569Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}]
[2025-08-01T08:05:35.570Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}}
[2025-08-01T08:05:35.571Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}
[2025-08-01T08:05:35.571Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:05:35.572Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:05:35.572Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T08:05:35.573Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T08:05:35.574Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:05:35.575Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T08:05:35.575Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T08:05:35.578Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:05:35.579Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T08:05:35.604Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:05:35.605Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.606Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:05:35.606Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:05:35.607Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.608Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:05:35.609Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:05:35.610Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.610Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:05:35.611Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.612Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:05:35.613Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:05:35.613Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:05:35.614Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.615Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:05:35.616Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.616Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:05:35.617Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:05:35.618Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:05:35.619Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.620Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:05:35.620Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.621Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.622Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.623Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.624Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:05:35.624Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:05:35.625Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:05:35.626Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.627Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:05:35.627Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:05:35.628Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:05:35.629Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:05:35.629Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:05:35.630Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:05:35.631Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:05:35.632Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:05:35.632Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:05:35.633Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:05:35.634Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:05:35.635Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:05:35.636Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:05:35.636Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:05:35.637Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:05:35.638Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:05:35.639Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:05:35.639Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:05:35.640Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:05:35.641Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:05:35.642Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:05:35.642Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.643Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.644Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.645Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:05:35.645Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.646Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.647Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.648Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.649Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:05:35.649Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.651Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.652Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:05:35.652Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:05:35.653Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.654Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.654Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:05:35.655Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:05:35.656Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.656Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:05:35.657Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:05:35.658Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:05:35.659Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:05:35.659Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:05:35.661Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:05:35.662Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.662Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:05:35.663Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:05:35.664Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.665Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.665Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.666Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:05:35.667Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:05:35.667Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:05:35.668Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.669Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:05:35.669Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:05:35.670Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.671Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:05:35.671Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:05:35.672Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:05:35.673Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.673Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:05:35.674Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.675Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.675Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.676Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.677Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:05:35.678Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:05:35.678Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:05:35.679Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.679Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:05:35.680Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:05:35.681Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:05:35.681Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:05:35.682Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:05:35.683Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:05:35.684Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:05:35.684Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:05:35.685Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:05:35.685Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:05:35.686Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:05:35.687Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:05:35.687Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:05:35.688Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:05:35.689Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:05:35.689Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:05:35.690Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:05:35.691Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:05:35.691Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:05:35.692Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:05:35.693Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:05:35.693Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.694Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.695Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.696Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:05:35.696Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.697Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.698Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.699Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:05:35.699Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:05:35.700Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.701Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.701Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:05:35.702Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:05:35.703Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:05:35.704Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:05:35.705Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:05:35.705Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:05:35.706Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.707Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.707Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:05:35.708Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:05:35.708Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.709Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:05:35.710Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:05:35.711Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:05:35.711Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:05:35.712Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:05:35.714Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:05:35.715Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.716Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:05:35.716Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:05:35.718Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.718Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.719Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:05:35.720Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:05:35.720Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:05:35.721Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:05:35.722Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:05:35.722Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:05:35.723Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:06:33.428Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T08:06:35.111Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:06:35.116Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T08:06:35.150Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:06:35.151Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.155Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:06:35.156Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:06:35.158Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.159Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:06:35.160Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:06:35.162Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.163Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:06:35.164Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.165Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:06:35.166Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:06:35.167Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:06:35.168Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.169Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:06:35.170Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.171Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:06:35.171Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:06:35.177Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:06:35.179Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.179Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:06:35.180Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.181Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.182Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.183Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.184Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:06:35.185Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:06:35.186Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:06:35.186Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.187Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:06:35.188Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:06:35.189Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:06:35.190Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:06:35.191Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:06:35.192Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:06:35.193Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:06:35.194Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:06:35.195Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:06:35.195Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:06:35.196Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:06:35.197Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:06:35.198Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:06:35.198Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:06:35.199Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:06:35.200Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:06:35.201Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:06:35.201Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:06:35.202Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:06:35.203Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:06:35.204Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:06:35.210Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.211Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.212Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.213Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:06:35.213Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.214Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.215Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.216Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.217Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:06:35.217Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.218Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.219Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:06:35.220Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:06:35.221Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.221Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.222Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:06:35.223Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:06:35.223Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.225Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:06:35.227Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:06:35.228Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:06:35.228Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:06:35.229Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:06:35.230Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:06:35.231Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.232Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:06:35.232Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:06:35.233Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.234Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.234Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.235Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:06:35.236Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:06:35.237Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:06:35.237Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.238Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:06:35.239Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:06:35.239Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.240Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:06:35.241Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:06:35.242Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:06:35.243Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.245Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:06:35.245Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.246Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.247Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.248Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.249Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:06:35.249Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:06:35.250Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:06:35.251Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.252Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:06:35.252Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:06:35.253Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:06:35.254Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:06:35.257Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:06:35.258Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:06:35.258Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:06:35.259Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:06:35.261Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:06:35.261Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:06:35.262Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:06:35.263Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:06:35.263Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:06:35.264Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:06:35.265Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:06:35.265Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:06:35.266Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:06:35.267Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:06:35.267Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:06:35.268Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:06:35.269Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:06:35.270Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.270Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.271Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.272Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:06:35.273Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.274Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.275Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.276Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.277Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:06:35.278Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.279Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.279Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:06:35.280Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:06:35.281Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:06:35.282Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:06:35.282Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:06:35.283Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:06:35.284Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.284Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.285Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:06:35.286Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:06:35.286Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.287Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:06:35.288Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:06:35.289Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:06:35.290Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:06:35.290Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:06:35.291Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:06:35.292Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.293Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:06:35.294Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:06:35.295Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.295Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.296Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.297Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:06:35.297Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:06:35.298Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:06:35.299Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.299Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:06:35.300Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:06:35.319Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T08:06:35.320Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T08:06:35.321Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T08:06:35.322Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:06:35.324Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T08:06:35.341Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T08:06:35.341Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T08:06:35.354Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T08:06:35.354Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:06:35.355Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:06:35.356Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  },
  {
    "uri": "http://example.org/custom#isFoo",
    "arity": 1,
    "description": "Returns true if the subject is the literal \"foo\""
  }
]
[2025-08-01T08:06:35.357Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T08:06:35.357Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:06:35.358Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T08:06:35.359Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:06:35.360Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T08:06:35.361Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}],"rules":[]}
[2025-08-01T08:06:35.361Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}]
[2025-08-01T08:06:35.362Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}}
[2025-08-01T08:06:35.363Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}
[2025-08-01T08:06:35.364Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:06:35.364Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:06:35.365Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T08:06:35.366Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T08:06:35.366Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:06:35.367Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T08:06:35.368Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T08:06:35.371Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:06:35.371Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T08:06:35.396Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:06:35.396Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.397Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:06:35.398Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:06:35.399Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.399Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:06:35.400Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:06:35.401Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.402Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:06:35.402Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.403Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:06:35.404Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:06:35.405Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:06:35.405Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.406Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:06:35.407Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.407Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:06:35.408Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:06:35.409Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:06:35.410Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.410Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:06:35.411Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.412Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.413Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.414Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.414Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:06:35.415Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:06:35.416Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:06:35.417Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.417Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:06:35.418Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:06:35.419Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:06:35.419Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:06:35.420Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:06:35.421Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:06:35.422Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:06:35.422Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:06:35.423Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:06:35.424Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:06:35.424Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:06:35.425Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:06:35.426Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:06:35.427Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:06:35.427Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:06:35.428Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:06:35.429Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:06:35.429Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:06:35.430Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:06:35.431Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:06:35.432Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:06:35.432Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.433Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.435Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.436Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:06:35.436Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.437Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.438Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.439Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.440Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:06:35.441Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.441Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.442Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:06:35.443Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:06:35.443Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.444Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.445Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:06:35.445Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:06:35.446Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.447Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:06:35.447Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:06:35.448Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:06:35.449Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:06:35.450Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:06:35.450Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:06:35.451Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.452Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:06:35.452Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:06:35.453Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.454Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.455Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.455Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:06:35.456Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:06:35.457Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:06:35.458Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.458Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:06:35.459Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:06:35.459Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.460Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:06:35.461Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:06:35.461Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:06:35.462Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.463Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:06:35.464Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.464Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.465Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.466Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.467Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:06:35.467Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:06:35.468Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:06:35.469Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.470Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:06:35.470Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:06:35.471Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:06:35.472Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:06:35.472Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:06:35.473Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:06:35.474Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:06:35.474Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:06:35.475Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:06:35.476Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:06:35.476Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:06:35.477Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:06:35.478Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:06:35.478Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:06:35.479Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:06:35.480Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:06:35.480Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:06:35.481Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:06:35.482Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:06:35.482Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:06:35.483Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:06:35.484Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.485Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.485Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.486Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:06:35.487Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.488Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.490Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.491Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:06:35.491Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:06:35.492Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.493Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.494Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:06:35.494Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:06:35.495Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:06:35.496Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:06:35.496Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:06:35.497Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:06:35.498Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.498Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.499Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:06:35.500Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:06:35.500Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.501Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:06:35.502Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:06:35.503Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:06:35.503Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:06:35.504Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:06:35.505Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:06:35.505Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.506Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:06:35.507Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:06:35.508Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.508Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.509Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:06:35.509Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:06:35.510Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:06:35.511Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:06:35.512Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:06:35.512Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:06:35.513Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:07:02.342Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T08:07:04.564Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:07:04.567Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T08:07:04.605Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:07:04.606Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.607Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:07:04.608Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:07:04.609Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.610Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:07:04.611Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:07:04.613Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.613Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:07:04.614Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.616Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:07:04.617Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:07:04.618Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:07:04.619Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.620Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:07:04.621Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.621Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:07:04.622Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:07:04.627Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:07:04.629Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.630Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:07:04.631Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.632Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.633Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.633Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.634Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:07:04.635Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:07:04.636Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:07:04.637Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.638Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:07:04.639Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:07:04.645Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:07:04.646Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:07:04.646Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:07:04.647Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:07:04.648Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:07:04.649Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:07:04.650Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:07:04.650Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:07:04.651Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:07:04.652Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:07:04.653Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:07:04.654Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:07:04.655Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:07:04.655Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:07:04.657Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:07:04.658Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:07:04.658Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:07:04.659Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:07:04.661Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:07:04.662Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.662Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.663Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.664Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:07:04.665Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.666Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.666Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.667Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.668Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:07:04.669Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.670Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.671Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:07:04.671Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:07:04.672Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.674Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.675Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:07:04.675Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:07:04.676Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.678Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:07:04.678Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:07:04.680Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:07:04.680Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:07:04.681Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:07:04.682Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:07:04.682Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.683Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:07:04.684Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:07:04.685Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.686Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.686Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.687Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:07:04.688Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:07:04.692Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:07:04.693Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.694Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:07:04.694Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:07:04.695Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.696Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:07:04.696Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:07:04.697Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:07:04.698Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.699Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:07:04.699Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.700Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.701Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.702Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.703Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:07:04.704Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:07:04.705Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:07:04.705Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.707Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:07:04.707Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:07:04.708Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:07:04.709Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:07:04.709Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:07:04.710Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:07:04.711Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:07:04.712Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:07:04.712Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:07:04.713Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:07:04.714Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:07:04.715Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:07:04.715Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:07:04.716Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:07:04.717Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:07:04.717Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:07:04.718Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:07:04.719Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:07:04.720Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:07:04.721Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:07:04.721Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:07:04.722Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.723Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.724Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.725Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:07:04.726Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.727Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.728Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.728Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.729Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:07:04.730Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.731Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.732Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:07:04.732Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:07:04.733Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:07:04.734Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:07:04.735Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:07:04.736Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:07:04.737Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.738Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.738Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:07:04.739Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:07:04.740Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.741Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:07:04.742Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:07:04.743Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:07:04.743Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:07:04.744Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:07:04.745Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:07:04.745Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.748Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:07:04.749Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:07:04.750Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.750Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.751Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.752Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:07:04.752Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:07:04.753Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:07:04.754Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.754Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:07:04.755Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:07:04.773Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T08:07:04.774Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T08:07:04.774Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T08:07:04.775Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:07:04.776Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T08:07:04.792Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T08:07:04.792Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T08:07:04.806Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T08:07:04.807Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:07:04.808Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:07:04.809Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  },
  {
    "uri": "http://example.org/custom#isFoo",
    "arity": 1,
    "description": "Returns true if the subject is the literal \"foo\""
  }
]
[2025-08-01T08:07:04.810Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T08:07:04.811Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:07:04.812Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T08:07:04.813Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:07:04.814Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T08:07:04.815Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}],"rules":[]}
[2025-08-01T08:07:04.816Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}]
[2025-08-01T08:07:04.817Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}}
[2025-08-01T08:07:04.818Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}
[2025-08-01T08:07:04.819Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:07:04.820Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:07:04.821Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T08:07:04.822Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T08:07:04.822Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:07:04.823Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T08:07:04.824Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T08:07:04.827Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:07:04.827Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T08:07:04.851Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:07:04.852Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.852Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:07:04.853Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:07:04.854Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.855Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:07:04.856Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:07:04.857Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.858Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:07:04.858Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.859Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:07:04.860Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:07:04.861Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:07:04.861Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.862Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:07:04.863Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.863Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:07:04.864Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:07:04.865Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:07:04.866Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.866Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:07:04.867Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.868Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.869Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.870Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.872Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:07:04.873Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:07:04.873Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:07:04.874Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.875Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:07:04.876Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:07:04.876Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:07:04.877Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:07:04.878Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:07:04.878Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:07:04.879Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:07:04.880Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:07:04.881Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:07:04.881Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:07:04.882Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:07:04.883Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:07:04.883Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:07:04.884Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:07:04.885Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:07:04.886Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:07:04.886Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:07:04.887Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:07:04.888Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:07:04.888Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:07:04.889Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:07:04.890Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.891Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.891Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.892Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:07:04.893Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.894Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.894Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.895Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.896Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:07:04.897Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.897Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.898Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:07:04.899Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:07:04.900Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.908Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.908Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:07:04.909Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:07:04.910Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.910Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:07:04.911Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:07:04.912Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:07:04.913Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:07:04.913Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:07:04.914Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:07:04.915Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.915Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:07:04.916Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:07:04.917Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.917Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.918Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.919Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:07:04.920Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:07:04.920Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:07:04.921Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.921Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:07:04.922Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:07:04.923Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.923Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:07:04.924Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:07:04.925Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:07:04.925Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.926Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:07:04.927Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.928Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.928Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.929Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.930Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:07:04.931Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:07:04.931Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:07:04.932Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.934Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:07:04.934Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:07:04.935Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:07:04.936Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:07:04.936Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:07:04.937Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:07:04.938Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:07:04.938Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:07:04.939Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:07:04.940Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:07:04.940Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:07:04.941Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:07:04.942Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:07:04.942Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:07:04.943Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:07:04.944Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:07:04.944Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:07:04.945Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:07:04.946Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:07:04.946Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:07:04.947Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:07:04.948Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.949Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.949Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.950Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:07:04.951Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.952Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.952Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.953Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:07:04.954Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:07:04.955Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.955Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.956Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:07:04.957Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:07:04.958Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:07:04.958Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:07:04.959Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:07:04.960Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:07:04.960Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.961Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.962Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:07:04.962Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:07:04.963Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.964Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:07:04.964Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:07:04.965Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:07:04.966Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:07:04.966Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:07:04.967Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:07:04.968Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.968Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:07:04.969Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:07:04.970Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.971Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.971Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:07:04.972Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:07:04.973Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:07:04.973Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:07:04.974Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:07:04.975Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:07:04.975Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:10:10.851Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T08:10:12.315Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:10:12.319Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T08:10:12.356Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:10:12.357Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.357Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:10:12.358Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:10:12.359Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.360Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:10:12.361Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:10:12.363Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.364Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:10:12.365Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.366Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:10:12.367Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:10:12.369Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:10:12.370Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.371Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:10:12.372Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.372Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:10:12.373Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:10:12.377Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:10:12.379Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.380Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:10:12.381Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.382Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.383Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.383Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.385Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:10:12.385Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:10:12.386Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:10:12.387Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.388Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:10:12.389Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:10:12.390Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:10:12.390Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:10:12.391Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:10:12.392Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:10:12.397Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:10:12.398Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:10:12.398Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:10:12.399Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:10:12.400Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:10:12.401Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:10:12.402Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:10:12.403Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:10:12.404Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:10:12.404Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:10:12.405Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:10:12.406Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:10:12.407Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:10:12.407Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:10:12.408Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:10:12.409Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.410Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.411Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.412Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:10:12.412Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.413Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.414Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.415Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.416Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:10:12.416Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.417Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.419Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:10:12.420Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:10:12.420Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.421Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.422Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:10:12.422Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:10:12.423Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.425Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:10:12.425Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:10:12.427Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:10:12.427Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:10:12.428Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:10:12.429Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:10:12.429Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.430Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:10:12.431Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:10:12.432Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.433Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.433Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.434Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:10:12.435Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:10:12.436Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:10:12.440Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.441Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:10:12.442Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:10:12.442Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.443Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:10:12.444Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:10:12.444Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:10:12.445Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.446Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:10:12.447Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.447Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.448Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.449Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.450Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:10:12.451Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:10:12.451Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:10:12.453Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.453Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:10:12.454Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:10:12.455Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:10:12.456Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:10:12.456Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:10:12.457Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:10:12.458Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:10:12.459Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:10:12.459Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:10:12.460Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:10:12.461Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:10:12.461Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:10:12.462Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:10:12.463Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:10:12.463Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:10:12.464Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:10:12.465Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:10:12.466Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:10:12.466Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:10:12.467Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:10:12.468Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:10:12.469Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.470Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.470Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.471Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:10:12.472Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.473Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.474Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.474Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.475Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:10:12.476Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.477Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.478Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:10:12.478Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:10:12.479Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:10:12.480Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:10:12.481Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:10:12.481Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:10:12.482Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.483Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.484Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:10:12.484Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:10:12.485Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.486Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:10:12.486Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:10:12.487Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:10:12.488Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:10:12.489Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:10:12.489Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:10:12.490Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.491Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:10:12.491Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:10:12.494Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.494Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.495Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.496Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:10:12.496Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:10:12.497Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:10:12.498Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.498Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:10:12.499Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:10:12.514Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T08:10:12.515Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T08:10:12.515Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T08:10:12.516Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:10:12.517Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T08:10:12.530Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T08:10:12.531Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T08:10:12.543Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T08:10:12.544Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:10:12.545Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:10:12.545Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  },
  {
    "uri": "http://example.org/custom#isFoo",
    "arity": 1,
    "description": "Returns true if the subject is the literal \"foo\""
  }
]
[2025-08-01T08:10:12.546Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T08:10:12.547Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:10:12.548Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T08:10:12.548Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:10:12.549Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T08:10:12.550Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}],"rules":[]}
[2025-08-01T08:10:12.551Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}]
[2025-08-01T08:10:12.552Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}}
[2025-08-01T08:10:12.552Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}
[2025-08-01T08:10:12.553Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:10:12.554Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:10:12.554Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T08:10:12.556Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T08:10:12.557Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:10:12.557Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T08:10:12.558Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T08:10:12.561Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:10:12.562Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T08:10:12.584Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:10:12.585Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.586Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:10:12.586Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:10:12.587Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.588Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:10:12.589Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:10:12.589Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.590Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:10:12.591Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.592Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:10:12.592Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:10:12.593Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:10:12.594Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.595Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:10:12.595Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.596Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:10:12.596Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:10:12.597Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:10:12.598Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.599Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:10:12.599Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.600Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.601Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.602Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.602Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:10:12.603Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:10:12.605Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:10:12.606Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.607Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:10:12.607Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:10:12.608Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:10:12.609Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:10:12.609Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:10:12.610Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:10:12.611Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:10:12.611Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:10:12.612Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:10:12.613Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:10:12.613Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:10:12.614Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:10:12.615Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:10:12.615Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:10:12.616Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:10:12.617Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:10:12.617Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:10:12.618Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:10:12.619Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:10:12.619Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:10:12.620Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:10:12.621Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.622Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.622Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.623Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:10:12.624Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.624Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.625Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.626Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.627Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:10:12.627Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.628Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.629Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:10:12.629Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:10:12.630Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.631Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.631Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:10:12.632Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:10:12.633Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.633Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:10:12.634Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:10:12.635Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:10:12.636Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:10:12.636Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:10:12.637Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:10:12.637Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.638Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:10:12.639Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:10:12.640Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.640Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.641Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.642Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:10:12.642Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:10:12.643Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:10:12.644Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.644Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:10:12.645Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:10:12.646Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.646Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:10:12.647Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:10:12.648Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:10:12.648Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.649Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:10:12.650Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.650Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.651Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.652Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.653Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:10:12.653Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:10:12.654Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:10:12.655Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.655Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:10:12.656Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:10:12.658Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:10:12.659Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:10:12.659Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:10:12.660Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:10:12.661Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:10:12.661Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:10:12.662Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:10:12.662Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:10:12.663Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:10:12.664Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:10:12.665Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:10:12.665Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:10:12.666Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:10:12.667Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:10:12.667Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:10:12.668Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:10:12.669Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:10:12.670Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:10:12.671Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:10:12.672Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.672Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.673Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.674Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:10:12.674Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.675Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.676Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.677Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:10:12.677Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:10:12.678Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.679Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.679Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:10:12.680Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:10:12.681Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:10:12.682Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:10:12.682Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:10:12.683Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:10:12.684Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.685Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.685Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:10:12.686Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:10:12.686Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.687Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:10:12.688Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:10:12.689Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:10:12.689Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:10:12.690Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:10:12.691Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:10:12.691Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.692Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:10:12.693Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:10:12.693Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.694Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.695Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:10:12.695Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:10:12.696Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:10:12.697Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:10:12.698Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:10:12.698Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:10:12.699Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:13:26.726Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T08:13:27.788Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:13:27.791Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T08:13:27.828Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:13:27.828Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:27.829Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:13:27.830Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:13:27.831Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:27.832Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:13:27.833Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:13:27.835Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:27.836Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:13:27.837Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:27.838Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:13:27.839Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:13:27.840Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:13:27.841Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:27.842Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:13:27.843Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:27.843Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:13:27.844Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:13:27.848Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:13:27.850Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:27.851Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:13:27.855Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:27.856Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:27.857Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:27.858Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:27.859Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:13:27.860Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:13:27.860Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:13:27.861Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:27.862Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:13:27.863Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:13:27.864Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:13:27.864Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:13:27.865Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:13:27.866Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:13:27.867Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:13:27.867Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:13:27.868Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:13:27.869Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:13:27.870Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:13:27.870Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:13:27.871Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:13:27.872Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:13:27.873Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:13:27.873Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:13:27.874Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:13:27.875Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:13:27.875Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:13:27.876Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:13:27.877Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:13:27.878Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:13:27.879Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:27.880Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:27.881Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:27.881Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:13:27.882Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:27.883Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:27.884Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:27.884Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:27.885Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:13:27.886Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:27.887Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:27.888Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:13:27.888Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:13:27.889Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:27.890Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:27.890Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:13:27.891Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:13:27.891Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:27.898Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:13:27.898Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:13:27.899Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:13:27.900Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:13:27.901Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:13:27.902Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:13:27.902Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:27.903Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:13:27.904Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:13:27.905Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:27.905Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:27.906Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:27.907Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:13:27.907Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:13:27.908Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:13:27.909Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:27.909Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:13:27.910Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:13:27.911Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:27.911Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:13:27.912Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:13:27.913Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:13:27.913Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:27.914Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:13:27.915Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:27.916Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:27.916Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:27.917Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:27.918Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:13:27.919Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:13:27.919Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:13:27.920Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:27.921Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:13:27.921Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:13:27.922Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:13:27.923Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:13:27.923Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:13:27.924Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:13:27.925Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:13:27.925Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:13:27.926Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:13:27.927Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:13:27.927Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:13:27.928Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:13:27.929Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:13:27.929Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:13:27.930Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:13:27.931Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:13:27.932Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:13:27.932Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:13:27.933Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:13:27.934Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:13:27.934Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:13:27.935Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:13:27.936Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:27.937Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:27.937Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:27.938Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:13:27.939Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:27.940Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:27.940Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:27.941Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:27.942Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:13:27.945Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:27.945Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:27.946Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:13:27.947Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:13:27.948Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:13:27.949Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:13:27.949Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:13:27.950Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:13:27.951Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:27.951Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:27.952Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:13:27.953Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:13:27.954Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:27.954Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:13:27.955Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:13:27.956Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:13:27.957Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:13:27.957Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:13:27.958Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:13:27.958Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:27.959Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:13:27.960Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:13:27.961Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:27.961Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:27.962Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:27.963Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:13:27.963Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:13:27.964Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:13:27.964Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:27.965Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:13:27.966Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:13:27.980Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T08:13:27.981Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T08:13:27.981Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T08:13:27.982Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:13:27.983Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T08:13:27.996Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T08:13:27.997Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T08:13:28.010Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T08:13:28.011Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:13:28.012Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:13:28.012Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  },
  {
    "uri": "http://example.org/custom#isFoo",
    "arity": 1,
    "description": "Returns true if the subject is the literal \"foo\""
  }
]
[2025-08-01T08:13:28.013Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T08:13:28.014Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:13:28.015Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T08:13:28.015Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:13:28.016Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T08:13:28.017Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}],"rules":[]}
[2025-08-01T08:13:28.018Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}]
[2025-08-01T08:13:28.018Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}}
[2025-08-01T08:13:28.019Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}
[2025-08-01T08:13:28.020Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:13:28.020Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:13:28.021Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T08:13:28.022Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T08:13:28.022Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:13:28.023Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T08:13:28.023Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T08:13:28.026Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:13:28.027Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T08:13:28.049Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:13:28.050Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:28.051Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:13:28.051Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:13:28.053Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:28.054Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:13:28.055Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:13:28.056Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:28.057Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:13:28.057Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:28.058Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:13:28.059Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:13:28.060Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:13:28.061Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:28.061Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:13:28.062Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:28.063Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:13:28.063Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:13:28.065Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:13:28.066Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:28.067Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:13:28.068Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:28.069Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:28.070Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:28.071Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:28.072Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:13:28.073Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:13:28.074Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:13:28.075Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:28.075Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:13:28.076Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:13:28.077Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:13:28.077Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:13:28.078Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:13:28.079Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:13:28.079Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:13:28.080Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:13:28.081Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:13:28.081Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:13:28.082Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:13:28.083Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:13:28.083Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:13:28.084Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:13:28.085Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:13:28.086Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:13:28.086Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:13:28.087Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:13:28.087Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:13:28.088Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:13:28.089Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:13:28.090Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:13:28.090Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:28.091Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:28.092Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:28.093Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:13:28.093Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:28.094Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:28.095Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:28.096Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:28.096Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:13:28.097Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:28.098Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:28.098Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:13:28.099Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:13:28.100Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:28.101Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:28.101Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:13:28.102Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:13:28.103Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:28.103Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:13:28.104Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:13:28.105Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:13:28.106Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:13:28.106Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:13:28.107Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:13:28.107Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:28.108Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:13:28.109Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:13:28.111Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:28.111Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:28.112Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:28.113Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:13:28.113Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:13:28.114Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:13:28.115Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:28.115Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:13:28.116Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:13:28.117Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:28.117Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:13:28.118Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:13:28.119Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:13:28.119Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:28.120Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:13:28.121Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:28.121Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:28.122Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:28.123Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:28.124Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:13:28.124Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:13:28.125Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:13:28.126Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:28.126Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:13:28.127Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:13:28.128Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:13:28.128Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:13:28.129Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:13:28.129Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:13:28.130Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:13:28.131Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:13:28.132Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:13:28.132Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:13:28.133Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:13:28.134Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:13:28.134Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:13:28.135Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:13:28.136Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:13:28.136Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:13:28.137Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:13:28.138Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:13:28.138Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:13:28.139Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:13:28.140Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:13:28.140Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:13:28.141Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:28.142Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:28.143Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:28.143Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:13:28.144Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:28.145Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:28.146Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:28.147Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:13:28.147Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:13:28.148Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:28.149Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:28.149Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:13:28.150Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:13:28.151Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:13:28.152Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:13:28.152Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:13:28.153Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:13:28.154Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:28.154Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:28.155Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:13:28.156Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:13:28.156Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:28.157Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:13:28.158Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:13:28.158Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:13:28.159Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:13:28.160Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:13:28.161Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:13:28.161Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:28.162Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:13:28.164Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:13:28.165Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:28.165Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:28.166Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:13:28.167Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:13:28.167Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:13:28.168Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:13:28.169Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:13:28.169Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:13:28.170Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:15:16.750Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T08:15:18.668Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:15:18.672Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T08:15:18.708Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:15:18.709Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:18.710Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:15:18.711Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:15:18.712Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.713Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:15:18.714Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:15:18.715Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.716Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:15:18.717Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.719Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:15:18.720Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:15:18.721Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:15:18.722Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.723Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:15:18.723Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:18.724Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:15:18.725Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:15:18.729Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:15:18.731Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.732Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:15:18.732Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:18.733Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.734Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.735Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.736Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:15:18.737Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:15:18.738Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:15:18.739Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.739Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:15:18.740Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:15:18.741Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:15:18.742Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:15:18.742Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:15:18.743Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:15:18.744Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:15:18.749Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:15:18.750Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:15:18.751Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:15:18.751Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:15:18.752Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:15:18.753Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:15:18.754Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:15:18.754Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:15:18.755Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:15:18.756Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:15:18.757Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:15:18.757Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:15:18.758Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:15:18.759Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:15:18.760Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:15:18.761Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.762Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.762Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.763Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:15:18.764Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:18.764Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.765Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.766Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.767Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:15:18.768Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.769Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.770Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:15:18.770Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:15:18.771Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:18.772Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:18.772Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:15:18.773Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:15:18.774Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.775Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:15:18.776Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:15:18.777Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:15:18.778Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:15:18.778Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:15:18.779Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:15:18.780Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.781Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:15:18.781Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:15:18.782Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.783Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.783Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.784Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:15:18.785Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:15:18.786Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:15:18.786Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:18.787Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:15:18.788Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:15:18.791Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:18.792Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:15:18.793Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:15:18.793Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:15:18.794Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.795Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:15:18.795Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:18.796Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.797Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.798Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.805Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:15:18.806Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:15:18.807Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:15:18.807Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.808Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:15:18.809Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:15:18.809Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:15:18.810Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:15:18.811Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:15:18.811Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:15:18.812Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:15:18.813Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:15:18.813Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:15:18.814Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:15:18.815Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:15:18.815Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:15:18.816Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:15:18.817Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:15:18.818Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:15:18.818Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:15:18.819Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:15:18.820Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:15:18.820Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:15:18.821Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:15:18.822Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:15:18.823Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:15:18.823Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.824Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.825Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.826Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:15:18.826Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:18.827Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.828Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.829Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.829Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:15:18.830Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.831Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.832Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:15:18.832Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:15:18.833Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:15:18.834Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:15:18.835Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:15:18.836Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:15:18.836Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:18.837Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:18.838Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:15:18.839Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:15:18.839Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.840Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:15:18.841Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:15:18.842Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:15:18.842Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:15:18.843Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:15:18.844Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:15:18.844Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.845Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:15:18.846Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:15:18.847Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.847Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.849Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.850Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:15:18.851Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:15:18.852Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:15:18.852Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:18.853Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:15:18.854Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:15:18.868Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T08:15:18.869Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T08:15:18.870Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T08:15:18.871Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:15:18.871Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T08:15:18.885Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T08:15:18.885Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T08:15:18.897Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T08:15:18.898Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:15:18.899Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:15:18.899Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  },
  {
    "uri": "http://example.org/custom#isFoo",
    "arity": 1,
    "description": "Returns true if the subject is the literal \"foo\""
  }
]
[2025-08-01T08:15:18.900Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T08:15:18.901Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:15:18.902Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T08:15:18.902Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:15:18.903Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T08:15:18.904Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}],"rules":[]}
[2025-08-01T08:15:18.905Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}]
[2025-08-01T08:15:18.906Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}}
[2025-08-01T08:15:18.906Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}
[2025-08-01T08:15:18.907Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:15:18.908Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:15:18.908Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T08:15:18.909Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T08:15:18.911Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:15:18.911Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T08:15:18.912Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T08:15:18.915Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:15:18.915Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T08:15:18.938Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:15:18.938Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:18.939Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:15:18.940Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:15:18.940Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.941Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:15:18.942Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:15:18.943Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.943Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:15:18.944Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.945Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:15:18.946Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:15:18.946Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:15:18.947Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.948Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:15:18.948Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:18.949Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:15:18.949Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:15:18.950Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:15:18.951Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.952Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:15:18.953Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:18.953Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.954Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.955Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.956Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:15:18.956Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:15:18.957Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:15:18.959Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.960Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:15:18.961Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:15:18.961Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:15:18.962Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:15:18.963Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:15:18.963Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:15:18.964Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:15:18.965Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:15:18.965Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:15:18.966Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:15:18.967Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:15:18.967Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:15:18.968Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:15:18.969Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:15:18.969Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:15:18.970Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:15:18.971Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:15:18.972Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:15:18.972Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:15:18.973Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:15:18.974Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:15:18.975Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:15:18.975Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.976Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.977Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.977Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:15:18.978Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:18.979Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.980Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.980Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:18.981Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:15:18.982Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.982Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.983Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:15:18.984Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:15:18.985Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:18.985Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:18.986Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:15:18.987Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:15:18.987Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.988Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:15:18.989Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:15:18.990Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:15:18.990Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:15:18.991Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:15:18.992Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:15:18.992Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.993Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:15:18.994Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:15:18.995Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.995Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.996Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:18.996Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:15:18.997Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:15:18.998Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:15:18.999Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:18.999Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:15:19.000Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:15:19.001Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:19.001Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:15:19.002Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:15:19.002Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:15:19.003Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:19.004Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:15:19.005Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:19.005Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:19.006Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:19.007Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:19.007Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:15:19.008Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:15:19.009Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:15:19.009Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:19.010Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:15:19.011Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:15:19.013Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:15:19.013Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:15:19.014Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:15:19.015Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:15:19.015Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:15:19.016Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:15:19.017Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:15:19.017Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:15:19.018Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:15:19.019Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:15:19.019Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:15:19.020Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:15:19.021Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:15:19.021Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:15:19.022Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:15:19.023Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:15:19.023Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:15:19.024Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:15:19.025Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:15:19.025Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:15:19.026Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:19.027Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:19.028Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:19.028Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:15:19.029Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:19.030Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:19.030Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:19.031Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:15:19.032Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:15:19.033Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:19.033Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:19.034Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:15:19.035Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:15:19.036Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:15:19.036Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:15:19.037Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:15:19.038Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:15:19.038Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:19.039Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:19.039Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:15:19.040Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:15:19.041Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:19.041Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:15:19.042Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:15:19.043Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:15:19.044Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:15:19.044Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:15:19.045Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:15:19.046Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:19.046Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:15:19.047Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:15:19.048Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:19.048Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:19.049Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:15:19.050Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:15:19.050Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:15:19.051Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:15:19.052Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:15:19.052Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:15:19.053Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:19:52.064Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T08:19:53.583Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:19:53.586Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T08:19:53.622Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:19:53.623Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.624Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:19:53.625Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:19:53.626Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.627Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:19:53.628Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:19:53.630Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.630Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:19:53.631Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.633Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:19:53.634Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:19:53.635Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:19:53.636Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.637Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:19:53.638Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.639Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:19:53.640Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:19:53.644Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:19:53.646Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.647Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:19:53.647Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.648Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.649Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.650Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.651Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:19:53.652Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:19:53.652Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:19:53.653Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.654Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:19:53.655Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:19:53.656Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:19:53.661Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:19:53.662Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:19:53.663Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:19:53.663Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:19:53.664Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:19:53.665Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:19:53.666Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:19:53.667Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:19:53.667Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:19:53.668Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:19:53.669Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:19:53.670Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:19:53.670Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:19:53.671Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:19:53.672Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:19:53.673Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:19:53.674Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:19:53.675Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:19:53.676Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:19:53.677Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.678Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.678Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.679Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:19:53.680Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.681Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.681Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.682Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.683Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:19:53.684Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.684Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.685Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:19:53.686Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:19:53.686Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.687Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.688Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:19:53.688Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:19:53.689Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.691Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:19:53.692Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:19:53.693Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:19:53.693Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:19:53.694Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:19:53.695Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:19:53.695Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.696Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:19:53.697Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:19:53.698Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.698Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.699Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.703Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:19:53.704Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:19:53.705Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:19:53.706Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.707Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:19:53.707Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:19:53.708Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.709Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:19:53.709Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:19:53.710Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:19:53.711Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.711Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:19:53.712Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.713Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.714Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.714Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.715Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:19:53.716Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:19:53.716Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:19:53.717Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.718Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:19:53.719Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:19:53.719Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:19:53.720Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:19:53.721Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:19:53.721Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:19:53.722Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:19:53.723Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:19:53.724Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:19:53.725Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:19:53.725Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:19:53.726Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:19:53.726Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:19:53.727Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:19:53.728Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:19:53.728Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:19:53.729Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:19:53.730Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:19:53.731Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:19:53.732Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:19:53.732Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:19:53.733Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:19:53.734Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.735Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.735Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.736Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:19:53.737Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.738Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.738Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.739Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.740Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:19:53.741Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.742Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.742Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:19:53.743Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:19:53.744Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:19:53.744Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:19:53.745Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:19:53.746Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:19:53.746Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.747Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.748Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:19:53.749Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:19:53.749Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.750Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:19:53.750Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:19:53.751Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:19:53.752Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:19:53.755Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:19:53.756Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:19:53.757Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.757Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:19:53.758Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:19:53.759Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.759Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.760Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.761Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:19:53.762Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:19:53.762Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:19:53.763Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.763Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:19:53.764Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:19:53.779Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T08:19:53.780Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T08:19:53.781Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T08:19:53.782Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:19:53.782Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T08:19:53.795Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T08:19:53.796Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T08:19:53.808Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T08:19:53.809Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:19:53.809Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:19:53.810Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  },
  {
    "uri": "http://example.org/custom#isFoo",
    "arity": 1,
    "description": "Returns true if the subject is the literal \"foo\""
  }
]
[2025-08-01T08:19:53.811Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T08:19:53.812Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:19:53.812Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T08:19:53.813Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:19:53.814Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T08:19:53.815Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}],"rules":[]}
[2025-08-01T08:19:53.817Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}]
[2025-08-01T08:19:53.817Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}}
[2025-08-01T08:19:53.818Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}
[2025-08-01T08:19:53.819Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:19:53.819Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:19:53.820Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T08:19:53.821Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T08:19:53.821Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:19:53.822Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T08:19:53.823Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T08:19:53.825Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:19:53.826Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T08:19:53.848Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:19:53.849Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.849Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:19:53.850Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:19:53.851Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.851Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:19:53.852Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:19:53.853Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.854Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:19:53.854Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.855Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:19:53.856Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:19:53.857Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:19:53.857Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.858Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:19:53.859Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.859Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:19:53.860Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:19:53.861Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:19:53.862Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.862Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:19:53.863Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.865Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.866Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.867Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.867Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:19:53.868Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:19:53.869Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:19:53.869Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.870Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:19:53.871Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:19:53.871Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:19:53.872Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:19:53.873Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:19:53.873Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:19:53.874Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:19:53.875Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:19:53.876Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:19:53.876Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:19:53.877Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:19:53.878Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:19:53.878Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:19:53.879Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:19:53.880Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:19:53.880Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:19:53.881Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:19:53.882Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:19:53.882Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:19:53.883Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:19:53.884Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:19:53.884Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:19:53.885Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.886Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.886Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.887Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:19:53.888Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.889Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.889Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.890Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.891Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:19:53.892Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.892Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.893Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:19:53.894Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:19:53.895Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.895Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.896Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:19:53.896Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:19:53.897Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.898Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:19:53.898Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:19:53.899Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:19:53.900Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:19:53.900Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:19:53.901Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:19:53.902Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.904Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:19:53.905Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:19:53.905Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.906Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.907Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.907Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:19:53.908Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:19:53.909Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:19:53.910Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.910Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:19:53.911Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:19:53.911Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.912Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:19:53.913Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:19:53.913Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:19:53.914Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.915Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:19:53.915Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.916Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.917Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.919Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.919Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:19:53.920Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:19:53.921Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:19:53.922Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.922Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:19:53.923Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:19:53.924Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:19:53.924Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:19:53.925Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:19:53.926Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:19:53.926Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:19:53.927Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:19:53.927Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:19:53.928Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:19:53.929Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:19:53.929Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:19:53.930Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:19:53.931Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:19:53.931Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:19:53.932Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:19:53.933Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:19:53.933Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:19:53.934Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:19:53.935Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:19:53.935Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:19:53.936Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:19:53.937Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.937Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.938Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.939Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:19:53.940Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.940Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.941Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.942Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:19:53.943Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:19:53.943Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.944Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.945Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:19:53.945Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:19:53.946Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:19:53.947Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:19:53.948Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:19:53.948Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:19:53.949Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.950Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.950Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:19:53.951Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:19:53.951Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.952Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:19:53.953Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:19:53.954Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:19:53.955Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:19:53.955Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:19:53.956Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:19:53.957Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.957Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:19:53.958Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:19:53.959Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.960Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.961Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:19:53.962Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:19:53.963Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:19:53.963Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:19:53.964Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:19:53.965Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:19:53.965Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:21:30.180Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T08:21:31.305Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:21:31.309Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T08:21:31.342Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:21:31.343Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.344Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:21:31.345Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:21:31.346Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.347Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:21:31.348Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:21:31.349Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.350Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:21:31.351Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.353Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:21:31.354Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:21:31.355Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:21:31.356Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.356Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:21:31.357Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.358Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:21:31.358Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:21:31.363Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:21:31.365Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.365Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:21:31.366Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.367Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.368Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.369Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.370Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:21:31.370Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:21:31.371Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:21:31.372Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.373Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:21:31.373Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:21:31.374Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:21:31.375Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:21:31.376Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:21:31.376Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:21:31.377Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:21:31.383Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:21:31.383Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:21:31.384Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:21:31.385Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:21:31.386Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:21:31.386Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:21:31.387Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:21:31.388Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:21:31.388Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:21:31.389Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:21:31.390Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:21:31.390Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:21:31.391Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:21:31.392Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:21:31.393Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:21:31.395Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.395Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.396Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.397Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:21:31.398Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.399Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.400Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.402Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.403Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:21:31.404Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.405Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.406Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:21:31.407Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:21:31.408Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.409Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.410Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:21:31.411Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:21:31.412Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.413Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:21:31.414Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:21:31.415Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:21:31.416Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:21:31.417Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:21:31.417Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:21:31.418Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.419Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:21:31.420Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:21:31.421Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.421Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.422Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.423Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:21:31.423Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:21:31.424Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:21:31.425Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.429Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:21:31.429Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:21:31.430Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.431Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:21:31.431Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:21:31.432Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:21:31.433Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.434Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:21:31.434Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.435Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.436Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.437Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.437Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:21:31.438Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:21:31.439Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:21:31.440Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.440Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:21:31.441Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:21:31.442Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:21:31.442Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:21:31.443Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:21:31.444Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:21:31.444Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:21:31.445Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:21:31.446Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:21:31.446Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:21:31.447Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:21:31.448Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:21:31.448Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:21:31.449Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:21:31.450Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:21:31.451Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:21:31.451Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:21:31.452Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:21:31.453Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:21:31.453Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:21:31.454Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:21:31.455Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:21:31.456Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.456Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.457Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.458Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:21:31.459Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.459Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.460Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.461Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.462Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:21:31.463Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.463Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.464Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:21:31.465Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:21:31.466Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:21:31.466Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:21:31.467Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:21:31.468Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:21:31.469Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.469Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.470Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:21:31.471Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:21:31.471Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.472Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:21:31.473Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:21:31.474Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:21:31.474Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:21:31.475Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:21:31.476Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:21:31.476Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.477Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:21:31.480Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:21:31.480Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.481Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.482Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.482Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:21:31.483Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:21:31.484Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:21:31.484Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.485Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:21:31.485Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:21:31.500Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T08:21:31.501Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T08:21:31.501Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T08:21:31.502Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:21:31.503Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T08:21:31.516Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T08:21:31.517Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T08:21:31.529Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T08:21:31.529Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:21:31.530Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:21:31.531Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  },
  {
    "uri": "http://example.org/custom#isFoo",
    "arity": 1,
    "description": "Returns true if the subject is the literal \"foo\""
  }
]
[2025-08-01T08:21:31.531Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T08:21:31.532Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:21:31.533Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T08:21:31.534Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:21:31.535Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T08:21:31.535Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}],"rules":[]}
[2025-08-01T08:21:31.536Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}]
[2025-08-01T08:21:31.537Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}}
[2025-08-01T08:21:31.538Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}
[2025-08-01T08:21:31.538Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:21:31.539Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:21:31.541Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T08:21:31.541Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T08:21:31.542Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:21:31.542Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T08:21:31.543Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T08:21:31.546Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:21:31.547Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T08:21:31.569Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:21:31.570Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.571Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:21:31.571Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:21:31.572Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.573Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:21:31.573Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:21:31.574Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.575Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:21:31.575Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.576Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:21:31.577Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:21:31.578Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:21:31.579Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.579Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:21:31.580Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.580Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:21:31.581Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:21:31.582Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:21:31.582Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.583Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:21:31.584Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.585Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.585Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.586Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.588Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:21:31.589Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:21:31.589Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:21:31.590Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.591Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:21:31.591Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:21:31.592Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:21:31.593Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:21:31.593Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:21:31.594Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:21:31.595Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:21:31.595Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:21:31.596Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:21:31.597Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:21:31.597Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:21:31.598Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:21:31.599Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:21:31.599Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:21:31.600Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:21:31.601Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:21:31.601Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:21:31.602Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:21:31.603Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:21:31.603Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:21:31.604Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:21:31.605Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:21:31.606Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.606Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.607Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.608Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:21:31.608Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.609Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.610Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.611Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.611Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:21:31.612Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.613Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.614Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:21:31.614Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:21:31.615Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.615Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.616Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:21:31.617Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:21:31.617Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.618Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:21:31.619Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:21:31.620Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:21:31.620Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:21:31.621Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:21:31.622Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:21:31.622Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.623Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:21:31.624Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:21:31.624Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.625Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.626Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.626Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:21:31.627Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:21:31.628Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:21:31.628Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.629Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:21:31.630Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:21:31.630Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.631Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:21:31.631Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:21:31.632Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:21:31.633Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.634Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:21:31.634Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.635Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.636Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.637Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.637Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:21:31.638Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:21:31.638Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:21:31.640Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.641Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:21:31.642Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:21:31.642Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:21:31.643Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:21:31.644Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:21:31.644Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:21:31.645Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:21:31.646Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:21:31.646Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:21:31.647Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:21:31.648Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:21:31.648Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:21:31.649Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:21:31.650Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:21:31.650Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:21:31.651Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:21:31.652Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:21:31.652Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:21:31.653Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:21:31.654Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:21:31.654Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:21:31.655Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:21:31.656Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.656Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.657Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.658Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:21:31.659Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.659Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.660Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.661Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:21:31.662Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:21:31.662Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.663Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.664Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:21:31.665Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:21:31.665Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:21:31.666Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:21:31.667Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:21:31.667Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:21:31.668Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.669Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.669Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:21:31.670Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:21:31.671Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.671Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:21:31.672Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:21:31.673Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:21:31.673Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:21:31.674Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:21:31.675Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:21:31.675Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.676Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:21:31.677Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:21:31.678Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.678Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.679Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:21:31.680Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:21:31.680Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:21:31.681Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:21:31.682Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:21:31.682Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:21:31.683Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:28:14.237Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T08:28:15.283Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:28:15.287Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T08:28:15.329Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:28:15.330Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.331Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:28:15.332Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:28:15.333Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.334Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:28:15.335Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:28:15.337Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.338Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:28:15.339Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.341Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:28:15.342Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:28:15.343Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:28:15.344Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.345Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:28:15.346Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.346Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:28:15.347Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:28:15.353Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:28:15.355Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.355Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:28:15.356Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.357Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.362Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.363Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.364Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:28:15.364Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:28:15.365Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:28:15.367Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.368Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:28:15.369Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:28:15.369Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:28:15.370Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:28:15.371Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:28:15.372Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:28:15.372Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:28:15.373Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:28:15.374Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:28:15.375Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:28:15.375Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:28:15.376Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:28:15.377Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:28:15.378Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:28:15.379Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:28:15.379Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:28:15.380Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:28:15.381Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:28:15.382Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:28:15.383Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:28:15.384Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:28:15.385Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:28:15.386Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.387Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.388Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.388Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:28:15.389Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.390Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.391Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.391Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.392Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:28:15.393Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.394Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.395Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:28:15.395Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:28:15.396Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.397Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.397Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:28:15.398Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:28:15.399Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.401Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:28:15.402Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:28:15.407Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:28:15.408Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:28:15.408Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:28:15.409Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:28:15.410Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.411Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:28:15.412Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:28:15.413Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.413Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.414Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.415Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:28:15.415Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:28:15.416Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:28:15.417Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.418Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:28:15.419Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:28:15.420Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.420Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:28:15.421Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:28:15.422Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:28:15.423Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.424Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:28:15.425Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.425Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.426Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.427Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.428Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:28:15.428Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:28:15.429Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:28:15.430Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.430Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:28:15.431Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:28:15.432Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:28:15.433Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:28:15.434Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:28:15.435Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:28:15.436Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:28:15.436Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:28:15.437Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:28:15.438Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:28:15.438Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:28:15.439Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:28:15.440Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:28:15.440Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:28:15.441Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:28:15.442Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:28:15.443Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:28:15.443Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:28:15.444Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:28:15.445Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:28:15.446Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:28:15.446Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:28:15.447Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.448Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.449Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.450Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:28:15.451Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.452Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.453Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.453Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.454Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:28:15.455Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.456Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.456Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:28:15.459Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:28:15.460Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:28:15.461Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:28:15.462Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:28:15.462Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:28:15.463Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.464Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.464Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:28:15.465Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:28:15.466Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.467Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:28:15.468Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:28:15.469Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:28:15.470Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:28:15.470Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:28:15.471Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:28:15.471Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.472Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:28:15.473Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:28:15.474Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.474Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.475Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.476Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:28:15.476Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:28:15.477Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:28:15.478Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.478Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:28:15.479Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:28:15.494Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T08:28:15.495Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T08:28:15.496Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T08:28:15.497Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:28:15.497Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T08:28:15.512Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T08:28:15.512Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T08:28:15.526Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T08:28:15.527Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:28:15.528Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:28:15.528Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  },
  {
    "uri": "http://example.org/custom#isFoo",
    "arity": 1,
    "description": "Returns true if the subject is the literal \"foo\""
  }
]
[2025-08-01T08:28:15.529Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T08:28:15.530Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:28:15.531Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T08:28:15.531Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:28:15.532Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T08:28:15.533Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}],"rules":[]}
[2025-08-01T08:28:15.534Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}]
[2025-08-01T08:28:15.535Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}}
[2025-08-01T08:28:15.535Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}
[2025-08-01T08:28:15.536Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:28:15.537Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:28:15.537Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T08:28:15.538Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T08:28:15.539Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:28:15.539Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T08:28:15.540Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T08:28:15.543Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:28:15.544Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T08:28:15.567Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:28:15.568Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.568Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:28:15.569Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:28:15.570Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.571Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:28:15.571Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:28:15.573Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.574Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:28:15.575Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.576Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:28:15.577Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:28:15.578Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:28:15.578Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.579Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:28:15.580Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.580Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:28:15.581Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:28:15.582Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:28:15.583Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.584Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:28:15.585Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.586Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.586Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.587Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.588Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:28:15.589Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:28:15.589Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:28:15.590Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.591Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:28:15.592Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:28:15.592Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:28:15.593Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:28:15.594Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:28:15.594Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:28:15.595Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:28:15.595Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:28:15.596Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:28:15.597Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:28:15.597Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:28:15.598Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:28:15.599Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:28:15.600Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:28:15.601Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:28:15.602Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:28:15.602Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:28:15.603Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:28:15.604Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:28:15.605Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:28:15.605Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:28:15.606Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:28:15.607Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.607Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.608Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.609Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:28:15.609Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.610Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.611Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.612Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.613Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:28:15.613Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.614Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.615Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:28:15.616Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:28:15.617Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.618Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.618Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:28:15.619Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:28:15.620Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.620Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:28:15.621Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:28:15.622Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:28:15.623Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:28:15.623Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:28:15.624Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:28:15.625Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.625Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:28:15.626Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:28:15.627Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.627Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.628Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.629Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:28:15.630Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:28:15.631Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:28:15.632Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.633Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:28:15.633Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:28:15.634Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.635Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:28:15.636Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:28:15.637Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:28:15.637Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.638Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:28:15.639Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.639Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.640Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.641Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.642Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:28:15.642Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:28:15.643Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:28:15.644Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.644Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:28:15.645Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:28:15.646Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:28:15.646Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:28:15.647Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:28:15.648Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:28:15.649Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:28:15.649Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:28:15.650Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:28:15.651Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:28:15.652Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:28:15.652Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:28:15.653Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:28:15.654Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:28:15.654Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:28:15.655Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:28:15.655Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:28:15.656Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:28:15.657Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:28:15.657Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:28:15.658Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:28:15.659Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:28:15.659Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.660Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.661Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.662Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:28:15.662Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.663Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.664Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.665Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:28:15.666Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:28:15.666Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.668Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.669Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:28:15.669Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:28:15.670Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:28:15.671Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:28:15.671Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:28:15.672Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:28:15.673Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.673Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.674Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:28:15.674Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:28:15.675Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.676Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:28:15.676Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:28:15.677Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:28:15.678Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:28:15.679Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:28:15.680Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:28:15.680Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.681Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:28:15.682Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:28:15.683Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.683Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.684Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:28:15.686Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:28:15.687Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:28:15.688Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:28:15.688Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:28:15.689Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:28:15.690Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:29:34.987Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T08:29:36.111Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:29:36.114Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T08:29:36.152Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:29:36.153Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.153Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:29:36.154Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:29:36.156Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.156Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:29:36.157Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:29:36.159Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.160Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:29:36.161Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.162Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:29:36.163Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:29:36.164Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:29:36.165Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.166Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:29:36.167Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.167Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:29:36.168Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:29:36.173Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:29:36.174Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.175Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:29:36.176Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.177Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.178Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.179Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.183Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:29:36.184Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:29:36.185Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:29:36.186Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.187Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:29:36.187Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:29:36.188Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:29:36.189Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:29:36.190Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:29:36.191Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:29:36.191Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:29:36.192Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:29:36.193Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:29:36.194Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:29:36.195Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:29:36.195Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:29:36.196Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:29:36.197Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:29:36.197Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:29:36.198Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:29:36.199Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:29:36.200Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:29:36.200Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:29:36.201Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:29:36.202Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:29:36.203Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:29:36.204Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.205Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.205Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.206Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:29:36.207Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.208Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.209Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.210Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.210Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:29:36.211Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.212Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.213Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:29:36.213Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:29:36.214Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.215Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.216Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:29:36.216Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:29:36.217Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.218Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:29:36.219Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:29:36.220Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:29:36.221Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:29:36.226Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:29:36.226Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:29:36.227Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.228Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:29:36.229Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:29:36.230Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.230Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.231Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.231Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:29:36.232Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:29:36.233Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:29:36.233Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.234Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:29:36.235Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:29:36.235Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.236Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:29:36.237Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:29:36.238Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:29:36.238Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.239Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:29:36.240Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.241Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.241Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.242Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.243Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:29:36.244Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:29:36.244Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:29:36.245Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.246Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:29:36.247Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:29:36.247Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:29:36.248Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:29:36.249Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:29:36.249Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:29:36.250Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:29:36.251Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:29:36.251Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:29:36.252Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:29:36.253Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:29:36.253Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:29:36.254Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:29:36.255Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:29:36.255Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:29:36.256Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:29:36.257Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:29:36.257Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:29:36.258Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:29:36.259Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:29:36.260Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:29:36.260Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:29:36.261Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.262Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.263Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.264Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:29:36.264Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.265Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.266Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.267Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.267Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:29:36.268Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.269Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.270Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:29:36.270Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:29:36.271Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:29:36.274Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:29:36.274Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:29:36.275Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:29:36.276Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.277Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.277Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:29:36.278Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:29:36.279Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.279Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:29:36.280Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:29:36.281Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:29:36.282Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:29:36.282Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:29:36.283Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:29:36.284Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.284Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:29:36.285Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:29:36.286Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.286Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.287Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.288Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:29:36.288Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:29:36.289Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:29:36.290Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.290Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:29:36.291Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:29:36.292Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][FILTER] Filtering malformed N3 string triple: <a> <b> <"1"> .
[2025-08-01T08:29:36.293Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][FILTER] Filtering malformed N3 string triple: <a> <c> <"1"> .
[2025-08-01T08:29:36.307Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T08:29:36.308Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T08:29:36.308Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T08:29:36.309Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:29:36.310Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T08:29:36.323Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T08:29:36.324Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T08:29:36.337Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T08:29:36.338Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:29:36.339Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:29:36.339Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  },
  {
    "uri": "http://example.org/custom#isFoo",
    "arity": 1,
    "description": "Returns true if the subject is the literal \"foo\""
  }
]
[2025-08-01T08:29:36.340Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T08:29:36.341Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:29:36.342Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T08:29:36.342Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:29:36.343Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T08:29:36.344Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}],"rules":[]}
[2025-08-01T08:29:36.345Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}]
[2025-08-01T08:29:36.346Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"}}
[2025-08-01T08:29:36.346Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"}}
[2025-08-01T08:29:36.347Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:29:36.348Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:29:36.348Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T08:29:36.349Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T08:29:36.350Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:29:36.350Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T08:29:36.351Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T08:29:36.352Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][FILTER] Filtering malformed N3 string triple: <a> <b> <"foo"> .
[2025-08-01T08:29:36.353Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][FILTER] Filtering malformed N3 string triple: <a> <b> <"bar"> .
[2025-08-01T08:29:36.356Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:29:36.356Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T08:29:36.380Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:29:36.380Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.381Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:29:36.382Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:29:36.382Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.383Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:29:36.386Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:29:36.386Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.387Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:29:36.388Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.389Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:29:36.389Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:29:36.390Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:29:36.391Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.392Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:29:36.392Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.393Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:29:36.394Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:29:36.394Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:29:36.395Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.396Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:29:36.397Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.397Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.398Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.399Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.400Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:29:36.401Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:29:36.401Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:29:36.402Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.403Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:29:36.403Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:29:36.404Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:29:36.405Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:29:36.406Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:29:36.406Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:29:36.407Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:29:36.408Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:29:36.409Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:29:36.409Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:29:36.410Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:29:36.411Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:29:36.412Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:29:36.412Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:29:36.413Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:29:36.414Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:29:36.414Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:29:36.415Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:29:36.416Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:29:36.417Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:29:36.417Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:29:36.418Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:29:36.419Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.419Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.420Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.421Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:29:36.422Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.422Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.423Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.424Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.425Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:29:36.426Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.426Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.427Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:29:36.428Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:29:36.428Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.429Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.430Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:29:36.430Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:29:36.431Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.432Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:29:36.432Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:29:36.433Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:29:36.434Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:29:36.435Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:29:36.435Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:29:36.436Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.436Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:29:36.437Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:29:36.438Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.438Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.439Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.441Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:29:36.442Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:29:36.442Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:29:36.443Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.444Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:29:36.444Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:29:36.445Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.446Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:29:36.446Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:29:36.447Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:29:36.448Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.448Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:29:36.449Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.450Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.451Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.451Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.452Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:29:36.453Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:29:36.453Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:29:36.454Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.455Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:29:36.456Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:29:36.456Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:29:36.457Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:29:36.458Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:29:36.458Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:29:36.459Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:29:36.460Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:29:36.460Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:29:36.461Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:29:36.461Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:29:36.462Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:29:36.463Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:29:36.463Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:29:36.464Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:29:36.465Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:29:36.465Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:29:36.466Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:29:36.466Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:29:36.467Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:29:36.468Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:29:36.469Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:29:36.469Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.470Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.471Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.472Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:29:36.472Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.473Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.474Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.475Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:29:36.475Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:29:36.476Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.477Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.478Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:29:36.478Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:29:36.479Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:29:36.480Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:29:36.480Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:29:36.481Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:29:36.482Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.482Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.483Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:29:36.484Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:29:36.484Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.485Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:29:36.485Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:29:36.486Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:29:36.487Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:29:36.488Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:29:36.488Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:29:36.489Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.490Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:29:36.491Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:29:36.491Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.492Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.494Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:29:36.494Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:29:36.495Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:29:36.496Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:29:36.496Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:29:36.497Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:29:36.498Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:29:36.498Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][FILTER] Filtering malformed N3 string triple: <a> <b> <"1"> .
[2025-08-01T08:29:36.499Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][FILTER] Filtering malformed N3 string triple: <a> <c> <"1"> .
[2025-08-01T08:39:58.660Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T08:39:59.872Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:39:59.878Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T08:39:59.915Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:39:59.916Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:39:59.917Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:39:59.917Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:39:59.919Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:39:59.920Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:39:59.921Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:39:59.924Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:39:59.925Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:39:59.926Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:39:59.927Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:39:59.928Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:39:59.929Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"}]
[2025-08-01T08:39:59.930Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"}
[2025-08-01T08:39:59.931Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:39:59.932Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  }
]
[2025-08-01T08:39:59.933Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:39:59.933Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:39:59.938Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"}]
[2025-08-01T08:39:59.945Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:39:59.946Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:39:59.947Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  }
]
[2025-08-01T08:39:59.948Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:39:59.949Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:39:59.950Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:39:59.951Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:39:59.952Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:39:59.952Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:39:59.953Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:39:59.954Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:39:59.955Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:39:59.956Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:39:59.956Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:39:59.957Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:39:59.959Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:39:59.959Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:39:59.960Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:39:59.961Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:39:59.962Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:39:59.963Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:39:59.963Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:39:59.964Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:39:59.965Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:39:59.965Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:39:59.966Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:39:59.967Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:39:59.967Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:39:59.968Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:39:59.969Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:39:59.970Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:39:59.971Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:39:59.972Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:39:59.973Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:39:59.974Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:39:59.975Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:39:59.976Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  }
]
[2025-08-01T08:39:59.977Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:39:59.977Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:39:59.978Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:39:59.979Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:39:59.980Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:39:59.980Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:39:59.981Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:39:59.982Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:39:59.983Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:39:59.983Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:39:59.988Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:39:59.989Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:39:59.990Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:39:59.992Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:39:59.993Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:39:59.994Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:39:59.995Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:39:59.995Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:39:59.996Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:39:59.997Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:39:59.998Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:39:59.999Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:39:59.999Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.000Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.001Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.001Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:40:00.002Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:40:00.003Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:40:00.003Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:40:00.004Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:40:00.005Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:40:00.006Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:40:00.007Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:40:00.008Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:40:00.010Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:40:00.011Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.012Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:40:00.013Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:40:00.014Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.015Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.016Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.017Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:40:00.018Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:40:00.019Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:40:00.020Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.022Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:40:00.023Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:40:00.024Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:40:00.025Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:40:00.027Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:40:00.028Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:40:00.029Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:40:00.029Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:40:00.030Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:40:00.031Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:40:00.032Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:40:00.032Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:40:00.033Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:40:00.034Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:40:00.035Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:40:00.035Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:40:00.036Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:40:00.037Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:40:00.037Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:40:00.038Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:40:00.039Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:40:00.040Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:40:00.040Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.041Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.042Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.043Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:40:00.043Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:40:00.044Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.047Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.048Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.049Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:40:00.049Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.050Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.051Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:40:00.052Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:40:00.053Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:40:00.053Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:40:00.054Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:40:00.055Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:40:00.055Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:40:00.056Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:40:00.057Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:40:00.058Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:40:00.058Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.059Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:40:00.060Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:40:00.061Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:40:00.062Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:40:00.062Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:40:00.063Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:40:00.064Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.064Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:40:00.065Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:40:00.066Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.067Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.067Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.068Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:40:00.069Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:40:00.069Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:40:00.070Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:40:00.071Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:40:00.072Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:40:00.100Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][FILTER][N3] Filtering malformed N3 string triple: <a> <b> <"1"> . Error: 
    at filterValidTriples (F:\github-dev\n3logic\n3logic-vscode-extension\n3logic\N3LogicReasoner.ts:39:114)
    at N3LogicReasoner.reason (F:\github-dev\n3logic\n3logic-vscode-extension\n3logic\N3LogicReasoner.ts:369:31)
    at Object.<anonymous> (F:\github-dev\n3logic\n3logic-vscode-extension\tests\reasoner.test.ts:42:51)
    at Promise.finally.completed (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1559:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1499:10)
    at _callCircusTest (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1009:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:949:3)
    at _runTestsForDescribeBlock (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:839:13)
    at _runTestsForDescribeBlock (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:829:11)
    at run (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:757:3)
    at runAndTransformResultsToJestFormat (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1920:21)
    at jestAdapter (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\runner.js:101:19)
    at runTestInternal (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-runner\build\testWorker.js:275:16)
    at runTest (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-runner\build\testWorker.js:343:7)
    at Object.worker (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-runner\build\testWorker.js:497:12)
[2025-08-01T08:40:00.103Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][FILTER][N3] Filtering malformed N3 string triple: <a> <c> <"1"> . Error: 
    at filterValidTriples (F:\github-dev\n3logic\n3logic-vscode-extension\n3logic\N3LogicReasoner.ts:39:114)
    at N3LogicReasoner.reason (F:\github-dev\n3logic\n3logic-vscode-extension\n3logic\N3LogicReasoner.ts:369:31)
    at Object.<anonymous> (F:\github-dev\n3logic\n3logic-vscode-extension\tests\reasoner.test.ts:42:51)
    at Promise.finally.completed (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1559:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1499:10)
    at _callCircusTest (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1009:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:949:3)
    at _runTestsForDescribeBlock (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:839:13)
    at _runTestsForDescribeBlock (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:829:11)
    at run (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:757:3)
    at runAndTransformResultsToJestFormat (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1920:21)
    at jestAdapter (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\runner.js:101:19)
    at runTestInternal (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-runner\build\testWorker.js:275:16)
    at runTest (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-runner\build\testWorker.js:343:7)
    at Object.worker (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-runner\build\testWorker.js:497:12)
[2025-08-01T08:40:00.111Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T08:40:00.112Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T08:40:00.113Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T08:40:00.113Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:40:00.114Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T08:40:00.129Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T08:40:00.130Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T08:40:00.145Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T08:40:00.146Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:40:00.146Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:40:00.147Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  },
  {
    "uri": "http://example.org/custom#isFoo",
    "arity": 1,
    "description": "Returns true if the subject is the literal \"foo\""
  }
]
[2025-08-01T08:40:00.148Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T08:40:00.149Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:40:00.150Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T08:40:00.151Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:40:00.152Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T08:40:00.152Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"},"_id":1,"_provenance":"asserted"},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"},"_id":2,"_provenance":"asserted"}],"rules":[]}
[2025-08-01T08:40:00.153Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"},"_id":1,"_provenance":"asserted"},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"},"_id":2,"_provenance":"asserted"}]
[2025-08-01T08:40:00.154Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"},"_id":1,"_provenance":"asserted"}
[2025-08-01T08:40:00.155Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"},"_id":2,"_provenance":"asserted"}
[2025-08-01T08:40:00.156Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:40:00.157Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    },
    "_id": 2,
    "_provenance": "asserted"
  }
]
[2025-08-01T08:40:00.157Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T08:40:00.158Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T08:40:00.159Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    },
    "_id": 2,
    "_provenance": "asserted"
  }
]
[2025-08-01T08:40:00.160Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T08:40:00.161Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T08:40:00.163Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][FILTER][N3] Filtering malformed N3 string triple: <a> <b> <"foo"> . Error: 
    at filterValidTriples (F:\github-dev\n3logic\n3logic-vscode-extension\n3logic\N3LogicReasoner.ts:39:114)
    at N3LogicReasoner.reason (F:\github-dev\n3logic\n3logic-vscode-extension\n3logic\N3LogicReasoner.ts:369:31)
    at Object.<anonymous> (F:\github-dev\n3logic\n3logic-vscode-extension\tests\reasoner.test.ts:89:51)
    at Promise.finally.completed (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1559:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1499:10)
    at _callCircusTest (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1009:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:949:3)
    at _runTestsForDescribeBlock (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:839:13)
    at _runTestsForDescribeBlock (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:829:11)
    at run (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:757:3)
    at runAndTransformResultsToJestFormat (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1920:21)
    at jestAdapter (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\runner.js:101:19)
    at runTestInternal (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-runner\build\testWorker.js:275:16)
    at runTest (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-runner\build\testWorker.js:343:7)
    at Object.worker (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-runner\build\testWorker.js:497:12)
[2025-08-01T08:40:00.165Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][FILTER][N3] Filtering malformed N3 string triple: <a> <b> <"bar"> . Error: 
    at filterValidTriples (F:\github-dev\n3logic\n3logic-vscode-extension\n3logic\N3LogicReasoner.ts:39:114)
    at N3LogicReasoner.reason (F:\github-dev\n3logic\n3logic-vscode-extension\n3logic\N3LogicReasoner.ts:369:31)
    at Object.<anonymous> (F:\github-dev\n3logic\n3logic-vscode-extension\tests\reasoner.test.ts:89:51)
    at Promise.finally.completed (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1559:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1499:10)
    at _callCircusTest (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1009:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:949:3)
    at _runTestsForDescribeBlock (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:839:13)
    at _runTestsForDescribeBlock (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:829:11)
    at run (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:757:3)
    at runAndTransformResultsToJestFormat (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1920:21)
    at jestAdapter (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\runner.js:101:19)
    at runTestInternal (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-runner\build\testWorker.js:275:16)
    at runTest (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-runner\build\testWorker.js:343:7)
    at Object.worker (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-runner\build\testWorker.js:497:12)
[2025-08-01T08:40:00.169Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:40:00.170Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T08:40:00.197Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:40:00.197Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:40:00.198Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:40:00.199Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:40:00.199Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.200Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:40:00.201Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:40:00.202Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.203Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:40:00.203Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.204Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:40:00.205Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:40:00.206Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"}]
[2025-08-01T08:40:00.207Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"}
[2025-08-01T08:40:00.208Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:40:00.209Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  }
]
[2025-08-01T08:40:00.209Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:40:00.210Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:40:00.211Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"}]
[2025-08-01T08:40:00.212Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.212Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:40:00.213Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  }
]
[2025-08-01T08:40:00.214Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.215Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.215Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.216Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:40:00.217Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:40:00.217Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:40:00.218Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.219Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:40:00.219Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:40:00.220Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:40:00.221Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:40:00.222Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:40:00.222Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:40:00.223Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:40:00.224Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:40:00.225Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:40:00.226Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:40:00.226Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:40:00.227Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:40:00.228Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:40:00.228Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:40:00.229Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:40:00.230Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:40:00.230Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:40:00.231Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:40:00.232Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:40:00.232Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:40:00.233Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:40:00.234Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:40:00.235Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.235Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.236Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.237Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:40:00.237Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  }
]
[2025-08-01T08:40:00.238Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.239Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.241Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.242Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:40:00.243Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.243Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.244Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:40:00.245Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:40:00.246Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:40:00.246Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:40:00.247Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:40:00.247Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:40:00.248Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.249Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:40:00.249Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:40:00.250Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:40:00.251Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:40:00.252Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:40:00.252Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:40:00.253Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.254Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:40:00.255Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:40:00.255Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.256Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.256Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.257Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:40:00.258Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:40:00.259Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:40:00.259Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:40:00.260Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:40:00.261Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:40:00.261Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:40:00.262Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:40:00.263Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:40:00.263Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:40:00.264Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.265Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:40:00.265Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:40:00.266Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.267Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.268Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.268Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:40:00.269Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:40:00.269Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:40:00.270Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.271Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:40:00.272Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:40:00.272Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:40:00.273Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:40:00.274Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:40:00.274Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:40:00.275Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:40:00.275Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:40:00.276Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:40:00.277Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:40:00.277Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:40:00.278Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:40:00.279Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:40:00.279Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:40:00.280Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:40:00.280Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:40:00.281Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:40:00.282Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:40:00.282Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:40:00.283Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:40:00.284Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:40:00.284Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:40:00.285Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.286Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.287Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.287Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:40:00.288Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:40:00.289Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.290Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.290Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:40:00.291Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:40:00.292Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.294Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.295Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:40:00.296Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:40:00.296Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:40:00.297Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:40:00.298Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:40:00.298Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:40:00.299Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:40:00.300Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:40:00.300Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:40:00.301Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:40:00.301Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.302Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:40:00.303Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:40:00.304Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:40:00.304Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:40:00.305Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:40:00.306Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:40:00.307Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.307Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:40:00.308Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:40:00.309Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.309Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.310Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:40:00.310Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:40:00.311Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:40:00.312Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:40:00.312Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:40:00.313Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:40:00.314Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:40:00.316Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][FILTER][N3] Filtering malformed N3 string triple: <a> <b> <"1"> . Error: 
    at filterValidTriples (F:\github-dev\n3logic\n3logic-vscode-extension\n3logic\N3LogicReasoner.ts:39:114)
    at N3LogicReasoner.reason (F:\github-dev\n3logic\n3logic-vscode-extension\n3logic\N3LogicReasoner.ts:369:31)
    at Object.<anonymous> (F:\github-dev\n3logic\n3logic-vscode-extension\tests\reasoner.test.ts:113:12)
    at Promise.finally.completed (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1559:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1499:10)
    at _callCircusTest (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1009:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:949:3)
    at _runTestsForDescribeBlock (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:839:13)
    at _runTestsForDescribeBlock (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:829:11)
    at run (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:757:3)
    at runAndTransformResultsToJestFormat (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1920:21)
    at jestAdapter (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\runner.js:101:19)
    at runTestInternal (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-runner\build\testWorker.js:275:16)
    at runTest (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-runner\build\testWorker.js:343:7)
    at Object.worker (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-runner\build\testWorker.js:497:12)
[2025-08-01T08:40:00.318Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][FILTER][N3] Filtering malformed N3 string triple: <a> <c> <"1"> . Error: 
    at filterValidTriples (F:\github-dev\n3logic\n3logic-vscode-extension\n3logic\N3LogicReasoner.ts:39:114)
    at N3LogicReasoner.reason (F:\github-dev\n3logic\n3logic-vscode-extension\n3logic\N3LogicReasoner.ts:369:31)
    at Object.<anonymous> (F:\github-dev\n3logic\n3logic-vscode-extension\tests\reasoner.test.ts:113:12)
    at Promise.finally.completed (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1559:28)
    at new Promise (<anonymous>)
    at callAsyncCircusFn (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1499:10)
    at _callCircusTest (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1009:40)
    at processTicksAndRejections (node:internal/process/task_queues:95:5)
    at _runTest (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:949:3)
    at _runTestsForDescribeBlock (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:839:13)
    at _runTestsForDescribeBlock (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:829:11)
    at run (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:757:3)
    at runAndTransformResultsToJestFormat (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\jestAdapterInit.js:1920:21)
    at jestAdapter (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-circus\build\runner.js:101:19)
    at runTestInternal (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-runner\build\testWorker.js:275:16)
    at runTest (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-runner\build\testWorker.js:343:7)
    at Object.worker (F:\github-dev\n3logic\n3logic-vscode-extension\node_modules\jest-runner\build\testWorker.js:497:12)
[2025-08-01T08:42:22.691Z] [N3LogicReasoner][DEBUG] should log
[2025-08-01T08:42:23.960Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:42:23.965Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t       <a> <b> \"1\" .\n\t\t       { <a> <b> ?x } => { <a> <c> ?x } .\n\t       "}
[2025-08-01T08:42:24.000Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:42:24.001Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:42:24.001Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:42:24.002Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:42:24.003Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.004Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:42:24.005Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:42:24.008Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.008Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:42:24.009Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.011Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:42:24.012Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:42:24.013Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"}]
[2025-08-01T08:42:24.014Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"}
[2025-08-01T08:42:24.015Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:42:24.015Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  }
]
[2025-08-01T08:42:24.016Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:42:24.017Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:42:24.021Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"}]
[2025-08-01T08:42:24.023Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.028Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:42:24.029Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  }
]
[2025-08-01T08:42:24.030Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.031Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.032Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.033Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:42:24.033Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:42:24.034Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:42:24.035Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.036Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:42:24.036Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:42:24.037Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:42:24.038Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:42:24.039Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:42:24.040Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:42:24.040Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:42:24.041Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:42:24.042Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:42:24.043Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:42:24.044Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:42:24.044Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:42:24.045Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:42:24.046Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:42:24.047Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:42:24.047Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:42:24.048Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:42:24.049Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:42:24.050Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:42:24.050Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:42:24.051Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:42:24.052Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:42:24.053Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.054Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.055Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.055Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:42:24.056Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  }
]
[2025-08-01T08:42:24.057Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.058Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.059Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.059Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:42:24.060Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.061Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.062Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:42:24.062Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:42:24.063Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:42:24.064Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:42:24.064Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:42:24.069Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:42:24.070Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.071Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:42:24.072Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:42:24.073Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:42:24.074Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:42:24.075Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:42:24.075Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:42:24.076Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.077Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:42:24.078Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:42:24.079Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.079Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.080Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.081Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:42:24.081Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:42:24.082Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:42:24.083Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:42:24.083Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:42:24.084Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:42:24.084Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:42:24.085Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:42:24.086Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:42:24.086Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:42:24.087Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.088Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:42:24.088Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:42:24.089Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.090Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.091Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.092Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:42:24.092Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:42:24.093Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:42:24.094Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.094Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:42:24.095Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:42:24.096Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:42:24.096Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:42:24.097Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:42:24.098Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:42:24.098Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:42:24.099Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:42:24.100Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:42:24.100Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:42:24.101Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:42:24.102Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:42:24.102Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:42:24.103Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:42:24.104Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:42:24.104Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:42:24.105Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:42:24.106Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:42:24.106Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:42:24.107Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:42:24.108Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:42:24.109Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:42:24.109Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.110Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.111Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.112Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:42:24.112Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:42:24.113Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.114Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.117Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.118Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:42:24.118Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.119Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.120Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:42:24.121Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:42:24.121Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:42:24.122Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:42:24.123Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:42:24.123Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:42:24.124Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:42:24.125Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:42:24.126Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:42:24.126Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:42:24.127Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.128Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:42:24.128Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:42:24.129Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:42:24.130Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:42:24.131Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:42:24.131Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:42:24.132Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.133Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:42:24.133Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:42:24.134Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.135Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.135Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.136Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:42:24.136Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:42:24.137Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:42:24.138Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:42:24.138Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:42:24.139Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
[2025-08-01T08:42:24.148Z] [N3LogicReasoner][DEBUG] Reasoner: All triples at start: []
[2025-08-01T08:42:24.149Z] [N3LogicReasoner][DEBUG] Reasoner: All rules at start: []
[2025-08-01T08:42:24.149Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins before registerBuiltin: []
[2025-08-01T08:42:24.150Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Builtins after registerBuiltin: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:42:24.151Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins after registerBuiltin: ["http://example.org/custom#isFoo"]
[2025-08-01T08:42:24.164Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: ["http://example.org/custom#isFoo"]
[2025-08-01T08:42:24.164Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"<a> <b> \"foo\" . <a> <b> \"bar\" . { <a> <b> ?x . ?x <http://example.org/custom#isFoo> ?x } => { <a> <c> ?x } ."}
[2025-08-01T08:42:24.177Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: []
[2025-08-01T08:42:24.178Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    }
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    }
  }
]
[2025-08-01T08:42:24.179Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:42:24.179Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  },
  {
    "uri": "http://example.org/custom#isFoo",
    "arity": 1,
    "description": "Returns true if the subject is the literal \"foo\""
  }
]
[2025-08-01T08:42:24.180Z] [N3LogicReasoner][DEBUG] Parsed rules: []
[2025-08-01T08:42:24.181Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:42:24.182Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: ["http://example.org/custom#isFoo"]
[2025-08-01T08:42:24.183Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs","http://example.org/custom#isFoo"]
[2025-08-01T08:42:24.183Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"},{"uri":"http://example.org/custom#isFoo","arity":1,"description":"Returns true if the subject is the literal \"foo\""}]
[2025-08-01T08:42:24.184Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"},"_id":1,"_provenance":"asserted"},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"},"_id":2,"_provenance":"asserted"}],"rules":[]}
[2025-08-01T08:42:24.185Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"},"_id":1,"_provenance":"asserted"},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"},"_id":2,"_provenance":"asserted"}]
[2025-08-01T08:42:24.186Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "foo" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"foo"},"_id":1,"_provenance":"asserted"}
[2025-08-01T08:42:24.186Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "bar" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"bar"},"_id":2,"_provenance":"asserted"}
[2025-08-01T08:42:24.187Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:42:24.188Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    },
    "_id": 2,
    "_provenance": "asserted"
  }
]
[2025-08-01T08:42:24.188Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: []
[2025-08-01T08:42:24.189Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: []
[2025-08-01T08:42:24.190Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "foo"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "bar"
    },
    "_id": 2,
    "_provenance": "asserted"
  }
]
[2025-08-01T08:42:24.190Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=false ===

[2025-08-01T08:42:24.191Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"foo\"","a b \"bar\""]
[2025-08-01T08:42:24.205Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before loadOntology: []
[2025-08-01T08:42:24.205Z] [N3LogicReasoner][DEBUG] Loading ontology {"format":"n3","data":"\n\t\t\t<a> <b> \"1\" .\n\t\t\t{ <a> <b> ?x } => { <a> <c> ?x } .\n\t\t"}
[2025-08-01T08:42:24.228Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Parsed rules after parsing: [
  {
    "type": "Rule",
    "antecedent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "b"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    },
    "consequent": {
      "type": "Formula",
      "triples": [
        {
          "subject": {
            "type": "IRI",
            "value": "a"
          },
          "predicate": {
            "type": "IRI",
            "value": "c"
          },
          "object": {
            "type": "Variable",
            "value": "x"
          }
        }
      ]
    }
  }
]
[2025-08-01T08:42:24.229Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] Parsed triples after parsing: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:42:24.230Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 antecedent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:42:24.231Z] [N3LogicReasoner][DEBUG] N3LogicReasoner: Rule #0 consequent triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:42:24.232Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins after loadOntology: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.232Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG][LOGGING] document.builtins after loadOntology: [
  {
    "uri": "http://www.w3.org/2000/10/swap/log#not",
    "arity": 1,
    "description": "log:not(x) is true if x is false"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#implies",
    "arity": 2,
    "description": "log:implies(x, y) is true if x implies y (handled by rule engine)"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#equalTo",
    "arity": 2,
    "description": "log:equalTo(x, y) is true if x === y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#or",
    "arity": 2,
    "description": "log:or(x, y) is true if x or y is true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#and",
    "arity": 2,
    "description": "log:and(x, y) is true if both x and y are true"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#xor",
    "arity": 2,
    "description": "log:xor(x, y) is true if x and y differ"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#if",
    "arity": 3,
    "description": "log:if(cond, then, else) returns then if cond is true, else else"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/log#distinct",
    "arity": 2,
    "description": "log:distinct(x, y) is true if x != y"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isLiteral",
    "arity": 1,
    "description": "type:isLiteral(x) is true if x is a literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isIRI",
    "arity": 1,
    "description": "type:isIRI(x) is true if x is an IRI"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#isBlank",
    "arity": 1,
    "description": "type:isBlank(x) is true if x is a blank node"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toString",
    "arity": 1,
    "description": "type:toString(x) returns x as string"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toNumber",
    "arity": 1,
    "description": "type:toNumber(x) returns x as number literal"
  },
  {
    "uri": "http://www.w3.org/2000/10/swap/type#toBoolean",
    "arity": 1,
    "description": "type:toBoolean(x) returns x as boolean literal"
  },
  {
    "uri": "http://www.w3.org/1999/02/22-rdf-syntax-ns#type",
    "arity": 2,
    "description": "rdf:type(x, y) is true if x is of type y (handled by triple matching)"
  },
  {
    "uri": "http://www.w3.org/2002/07/owl#sameAs",
    "arity": 2,
    "description": "owl:sameAs(x, y) is true if x and y are the same"
  }
]
[2025-08-01T08:42:24.233Z] [N3LogicReasoner][DEBUG] Parsed rules: [{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]
[2025-08-01T08:42:24.234Z] [N3LogicReasoner][DEBUG] [REASONER] Starting reason() method. Current builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.235Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] customBuiltins before reasoning: []
[2025-08-01T08:42:24.236Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] document.builtins before reasoning: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.236Z] [N3LogicReasoner][DEBUG] Merged builtins for reasoning: [{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]
[2025-08-01T08:42:24.237Z] [N3LogicReasoner][DEBUG] Starting reasoning {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"}],"rules":[{"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}]}
[2025-08-01T08:42:24.238Z] [N3LogicReasoner][DEBUG] Initial working triples: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"}]
[2025-08-01T08:42:24.239Z] [N3LogicReasoner][DEBUG] Adding initial triple to inferred set: a b "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"}
[2025-08-01T08:42:24.239Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 1 START ===
[2025-08-01T08:42:24.240Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  }
]
[2025-08-01T08:42:24.241Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:42:24.241Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:42:24.242Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"}]
[2025-08-01T08:42:24.243Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.243Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:42:24.244Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  }
]
[2025-08-01T08:42:24.245Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.246Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.246Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.247Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:42:24.248Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:42:24.248Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:42:24.249Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.250Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:42:24.251Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:42:24.251Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:42:24.252Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:42:24.253Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:42:24.253Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:42:24.254Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:42:24.254Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:42:24.255Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:42:24.256Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:42:24.256Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:42:24.257Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:42:24.258Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:42:24.258Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:42:24.259Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:42:24.260Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:42:24.260Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:42:24.261Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:42:24.261Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:42:24.262Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:42:24.263Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:42:24.264Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:42:24.264Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.265Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.266Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.266Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:42:24.267Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  }
]
[2025-08-01T08:42:24.268Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.268Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.269Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.270Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:42:24.271Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.271Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.272Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:42:24.273Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:42:24.273Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:42:24.274Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:42:24.275Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:42:24.275Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:42:24.276Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.277Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:42:24.277Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:42:24.278Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:42:24.279Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:42:24.280Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:42:24.280Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:42:24.281Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.283Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:42:24.284Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:42:24.285Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.285Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.286Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.286Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Adding new inferred triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:42:24.287Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 1: ["a c \"1\""]
[2025-08-01T08:42:24.288Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 1: [0]
[2025-08-01T08:42:24.288Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 1: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:42:24.289Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 1 END. changed=true ===

[2025-08-01T08:42:24.290Z] [N3LogicReasoner][DEBUG] 
=== Reasoning iteration 2 START ===
[2025-08-01T08:42:24.290Z] [N3LogicReasoner][DEBUG] Current triple store at start of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:42:24.291Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Evaluating rule #0: {"type":"Rule","antecedent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]},"consequent":{"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}}]}}
[2025-08-01T08:42:24.292Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Matching antecedent for rule #0: {"type":"Formula","triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]}
[2025-08-01T08:42:24.292Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent called with: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}] [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"},{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}]
[2025-08-01T08:42:24.293Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.294Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:42:24.294Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:42:24.295Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.296Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.297Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.297Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking pattern triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:42:24.298Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Pattern triple details: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:42:24.298Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Attempting builtin match for triple predicate: b
[2025-08-01T08:42:24.299Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] All builtins at this point: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.300Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#not against predicateUri: b
[2025-08-01T08:42:24.300Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#implies against predicateUri: b
[2025-08-01T08:42:24.301Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#equalTo against predicateUri: b
[2025-08-01T08:42:24.302Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#or against predicateUri: b
[2025-08-01T08:42:24.302Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#and against predicateUri: b
[2025-08-01T08:42:24.303Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#xor against predicateUri: b
[2025-08-01T08:42:24.303Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#if against predicateUri: b
[2025-08-01T08:42:24.304Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/log#distinct against predicateUri: b
[2025-08-01T08:42:24.305Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isLiteral against predicateUri: b
[2025-08-01T08:42:24.305Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isIRI against predicateUri: b
[2025-08-01T08:42:24.306Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#isBlank against predicateUri: b
[2025-08-01T08:42:24.307Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toString against predicateUri: b
[2025-08-01T08:42:24.307Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toNumber against predicateUri: b
[2025-08-01T08:42:24.308Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2000/10/swap/type#toBoolean against predicateUri: b
[2025-08-01T08:42:24.309Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/1999/02/22-rdf-syntax-ns#type against predicateUri: b
[2025-08-01T08:42:24.309Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Checking builtin candidate: http://www.w3.org/2002/07/owl#sameAs against predicateUri: b
[2025-08-01T08:42:24.310Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] No builtin match found for predicateUri: b
[2025-08-01T08:42:24.311Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtin found: false
[2025-08-01T08:42:24.311Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin predicateUri: b
[2025-08-01T08:42:24.312Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] No builtin matched for any triple, falling back to data triple matching. Patterns: [{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}]
[2025-08-01T08:42:24.312Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 0 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:42:24.313Z] [N3LogicReasoner][DEBUG] Matching triple #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Literal","value":"1"},"_id":1,"_provenance":"asserted"} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:42:24.314Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.314Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Triple matched. Bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.315Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtins available at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.316Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Patterns: []
[2025-08-01T08:42:24.316Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:42:24.317Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG][LOGGING] Builtin URIs: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.318Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent called with patterns: [] data: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
] builtins: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.319Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Builtins at match time: ["http://www.w3.org/2000/10/swap/log#not","http://www.w3.org/2000/10/swap/log#implies","http://www.w3.org/2000/10/swap/log#equalTo","http://www.w3.org/2000/10/swap/log#or","http://www.w3.org/2000/10/swap/log#and","http://www.w3.org/2000/10/swap/log#xor","http://www.w3.org/2000/10/swap/log#if","http://www.w3.org/2000/10/swap/log#distinct","http://www.w3.org/2000/10/swap/type#isLiteral","http://www.w3.org/2000/10/swap/type#isIRI","http://www.w3.org/2000/10/swap/type#isBlank","http://www.w3.org/2000/10/swap/type#toString","http://www.w3.org/2000/10/swap/type#toNumber","http://www.w3.org/2000/10/swap/type#toBoolean","http://www.w3.org/1999/02/22-rdf-syntax-ns#type","http://www.w3.org/2002/07/owl#sameAs"]
[2025-08-01T08:42:24.319Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Checking compatibility of bindings: {"x":{"type":"Literal","value":"1"}} with restBindings: {}
[2025-08-01T08:42:24.320Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Bindings compatible, merging: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.321Z] [N3LogicReasoner][DEBUG] Bindings compatible, pushing merged bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.321Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] Data triple # 1 : {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:42:24.322Z] [N3LogicReasoner][DEBUG] Matching triple #1: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} against pattern: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}
[2025-08-01T08:42:24.323Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchTriple result: null
[2025-08-01T08:42:24.323Z] [N3LogicReasoner][DEBUG] Triple did not match pattern
[2025-08-01T08:42:24.324Z] [N3LogicReasoner][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:42:24.325Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent returning results: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:42:24.325Z] [N3LogicReasoner][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:42:24.326Z] [N3LogicReasoner][DEBUG] [MATCHER][DEBUG] matchAntecedent: final results: [
  {
    "x": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:42:24.327Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] matchAntecedent result: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:42:24.327Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings list from matchFormula for rule #0: [{"x":{"type":"Literal","value":"1"}}]
[2025-08-01T08:42:24.328Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Bindings #0 before evaluateBuiltins for rule #0: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.329Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: triples: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Variable",
      "value": "x"
    }
  }
]
[2025-08-01T08:42:24.329Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: bindings: {
  "x": {
    "type": "Literal",
    "value": "1"
  }
}
[2025-08-01T08:42:24.330Z] [N3LogicReasoner][DEBUG] evaluateBuiltins called {"triples":[{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"b"},"object":{"type":"Variable","value":"x"}}],"bindings":{"x":{"type":"Literal","value":"1"}},"builtins":[{"uri":"http://www.w3.org/2000/10/swap/log#not","arity":1,"description":"log:not(x) is true if x is false"},{"uri":"http://www.w3.org/2000/10/swap/log#implies","arity":2,"description":"log:implies(x, y) is true if x implies y (handled by rule engine)"},{"uri":"http://www.w3.org/2000/10/swap/log#equalTo","arity":2,"description":"log:equalTo(x, y) is true if x === y"},{"uri":"http://www.w3.org/2000/10/swap/log#or","arity":2,"description":"log:or(x, y) is true if x or y is true"},{"uri":"http://www.w3.org/2000/10/swap/log#and","arity":2,"description":"log:and(x, y) is true if both x and y are true"},{"uri":"http://www.w3.org/2000/10/swap/log#xor","arity":2,"description":"log:xor(x, y) is true if x and y differ"},{"uri":"http://www.w3.org/2000/10/swap/log#if","arity":3,"description":"log:if(cond, then, else) returns then if cond is true, else else"},{"uri":"http://www.w3.org/2000/10/swap/log#distinct","arity":2,"description":"log:distinct(x, y) is true if x != y"},{"uri":"http://www.w3.org/2000/10/swap/type#isLiteral","arity":1,"description":"type:isLiteral(x) is true if x is a literal"},{"uri":"http://www.w3.org/2000/10/swap/type#isIRI","arity":1,"description":"type:isIRI(x) is true if x is an IRI"},{"uri":"http://www.w3.org/2000/10/swap/type#isBlank","arity":1,"description":"type:isBlank(x) is true if x is a blank node"},{"uri":"http://www.w3.org/2000/10/swap/type#toString","arity":1,"description":"type:toString(x) returns x as string"},{"uri":"http://www.w3.org/2000/10/swap/type#toNumber","arity":1,"description":"type:toNumber(x) returns x as number literal"},{"uri":"http://www.w3.org/2000/10/swap/type#toBoolean","arity":1,"description":"type:toBoolean(x) returns x as boolean literal"},{"uri":"http://www.w3.org/1999/02/22-rdf-syntax-ns#type","arity":2,"description":"rdf:type(x, y) is true if x is of type y (handled by triple matching)"},{"uri":"http://www.w3.org/2002/07/owl#sameAs","arity":2,"description":"owl:sameAs(x, y) is true if x and y are the same"}]}
[2025-08-01T08:42:24.331Z] [N3LogicReasoner][DEBUG] evaluateBuiltins: checking triple: {
  "subject": {
    "type": "IRI",
    "value": "a"
  },
  "predicate": {
    "type": "IRI",
    "value": "b"
  },
  "object": {
    "type": "Variable",
    "value": "x"
  }
}
[2025-08-01T08:42:24.332Z] [N3LogicReasoner][DEBUG] evaluateBuiltins returning true
[2025-08-01T08:42:24.332Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] evaluateBuiltins result for rule #0, bindings #0: true
[2025-08-01T08:42:24.334Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiating consequent triple #0 for rule #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}} with bindings: {"x":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.335Z] [N3LogicReasoner][DEBUG] instantiateTriple called {"triple":{"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Variable","value":"x"}},"bindings":{"x":{"type":"Literal","value":"1"}}}
[2025-08-01T08:42:24.335Z] [N3LogicReasoner][DEBUG] Substituting variable in triple: x with {"type":"Literal","value":"1"}
[2025-08-01T08:42:24.336Z] [N3LogicReasoner][DEBUG] instantiateTriple result: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.337Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Instantiated triple for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.337Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Checking if triple is already inferred for rule #0, consIdx #0: a c "1" {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}}
[2025-08-01T08:42:24.338Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Triple already present, skipping for rule #0, consIdx #0: {"subject":{"type":"IRI","value":"a"},"predicate":{"type":"IRI","value":"c"},"object":{"type":"Literal","value":"1"}} Key: a c "1"
[2025-08-01T08:42:24.338Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] New triples inferred in iteration 2: []
[2025-08-01T08:42:24.339Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Rules fired in iteration 2: []
[2025-08-01T08:42:24.340Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] Current triple store at end of iteration 2: [
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "b"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    },
    "_id": 1,
    "_provenance": "asserted"
  },
  {
    "subject": {
      "type": "IRI",
      "value": "a"
    },
    "predicate": {
      "type": "IRI",
      "value": "c"
    },
    "object": {
      "type": "Literal",
      "value": "1"
    }
  }
]
[2025-08-01T08:42:24.340Z] [N3LogicReasoner][DEBUG] [N3LogicReasoner][DEBUG] === Reasoning iteration 2 END. changed=false ===

[2025-08-01T08:42:24.341Z] [N3LogicReasoner][DEBUG] Reasoning complete. Inferred triples: ["a b \"1\"","a c \"1\""]
